

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Fri May 22 10:16:21 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataCOMRAM
    39  0072D8                     __pidataCOMRAM:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _R
    43  0072D8  0FDF               	dw	4063
    44                           
    45                           ;initializer for _REG
    46  0072DA  0F                 	db	15
    47                           
    48                           ;initializer for _REGad
    49  0072DB  DF                 	db	223
    50                           
    51                           ;initializer for _sino
    52  0072DC  04                 	db	4
    53  0072DD  0E                 	db	14
    54  0072DE  0E                 	db	14
    55  0072DF  0E                 	db	14
    56  0072E0  1F                 	db	31
    57  0072E1  00                 	db	0
    58  0072E2  04                 	db	4
    59  0072E3  00                 	db	0
    60                           
    61                           	psect	smallconst
    62  00101C                     __psmallconst:
    63                           	opt stack 0
    64  00101C  00                 	db	0
    65  00101D                     _dpowers:
    66                           	opt stack 0
    67  00101D  0001               	dw	1
    68  00101F  000A               	dw	10
    69  001021  0064               	dw	100
    70  001023  03E8               	dw	1000
    71  001025  2710               	dw	10000
    72  001027                     __end_of_dpowers:
    73                           	opt stack 0
    74  0000                     _ADRES	set	4035
    75  0000                     _ADCON0	set	4034
    76  0000                     _ADCON0bits	set	4034
    77  0000                     _ADCON1	set	4033
    78  0000                     _ADCON2	set	4032
    79  0000                     _ADCON2bits	set	4032
    80  0000                     _ADRESH	set	4036
    81  0000                     _BAUDCON	set	4024
    82  0000                     _BAUDCONbits	set	4024
    83  0000                     _CCP1CON	set	4029
    84  0000                     _CCP2CON	set	4026
    85  0000                     _CCPR1L	set	4030
    86  0000                     _CCPR2L	set	4027
    87  0000                     _EEADR	set	4009
    88  0000                     _EECON1	set	4006
    89  0000                     _EECON1bits	set	4006
    90  0000                     _EECON2	set	4007
    91  0000                     _EEDATA	set	4008
    92  0000                     _INTCON2bits	set	4081
    93  0000                     _INTCON3bits	set	4080
    94  0000                     _INTCONbits	set	4082
    95  0000                     _IPR1bits	set	3999
    96  0000                     _LATA	set	3977
    97  0000                     _LATB	set	3978
    98  0000                     _LATBbits	set	3978
    99  0000                     _LATC	set	3979
   100  0000                     _OSCCON	set	4051
   101  0000                     _OSCCONbits	set	4051
   102  0000                     _PIE1bits	set	3997
   103  0000                     _PIE2bits	set	4000
   104  0000                     _PORTAbits	set	3968
   105  0000                     _PORTBbits	set	3969
   106  0000                     _PORTCbits	set	3970
   107  0000                     _PORTDbits	set	3971
   108  0000                     _PR2	set	4043
   109  0000                     _RCONbits	set	4048
   110  0000                     _RCSTA	set	4011
   111  0000                     _SPBRG	set	4015
   112  0000                     _SPBRGH	set	4016
   113  0000                     _T0CON	set	4053
   114  0000                     _T0CONbits	set	4053
   115  0000                     _T1CON	set	4045
   116  0000                     _T1CONbits	set	4045
   117  0000                     _T2CON	set	4042
   118  0000                     _T2CONbits	set	4042
   119  0000                     _T3CON	set	4017
   120  0000                     _T3CONbits	set	4017
   121  0000                     _TMR0H	set	4055
   122  0000                     _TMR0L	set	4054
   123  0000                     _TMR1H	set	4047
   124  0000                     _TMR1L	set	4046
   125  0000                     _TMR3H	set	4019
   126  0000                     _TMR3L	set	4018
   127  0000                     _TRISA	set	3986
   128  0000                     _TRISAbits	set	3986
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISBbits	set	3987
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISCbits	set	3988
   133  0000                     _TRISDbits	set	3989
   134  0000                     _TXREG	set	4013
   135  0000                     _TXSTA	set	4012
   136  0000                     _TXSTAbits	set	4012
   137  0000                     _WDTCONbits	set	4049
   138  001027                     __stringdata:
   139                           	opt stack 0
   140  001027                     STR_1:
   141  001027  4D                 	db	77	;'M'
   142  001028  69                 	db	105	;'i'
   143  001029  63                 	db	99	;'c'
   144  00102A  72                 	db	114	;'r'
   145  00102B  6F                 	db	111	;'o'
   146  00102C  63                 	db	99	;'c'
   147  00102D  6F                 	db	111	;'o'
   148  00102E  6E                 	db	110	;'n'
   149  00102F  74                 	db	116	;'t'
   150  001030  72                 	db	114	;'r'
   151  001031  6F                 	db	111	;'o'
   152  001032  6C                 	db	108	;'l'
   153  001033  00                 	db	0
   154  001034                     STR_2:
   155  001034  43                 	db	67	;'C'
   156  001035  6F                 	db	111	;'o'
   157  001036  6E                 	db	110	;'n'
   158  001037  76                 	db	118	;'v'
   159  001038  65                 	db	101	;'e'
   160  001039  72                 	db	114	;'r'
   161  00103A  74                 	db	116	;'t'
   162  00103B  65                 	db	101	;'e'
   163  00103C  00                 	db	0
   164  00103D                     STR_3:
   165  00103D  25                 	db	37
   166  00103E  64                 	db	100	;'d'
   167  00103F  20                 	db	32
   168  001040  20                 	db	32
   169  001041  00                 	db	0
   170  001042                     __end_of__stringdata:
   171                           	opt stack 0
   172  001042  00                 	db	0	; dummy byte at the end
   173  0000                     
   174                           ; #config settings
   175                           
   176                           	psect	cinit
   177  007324                     __pcinit:
   178                           	opt stack 0
   179  007324                     start_initialization:
   180                           	opt stack 0
   181  007324                     __initialization:
   182                           	opt stack 0
   183                           
   184                           ; Clear objects allocated to COMRAM (24 bytes)
   185  007324  EE00  F038         	lfsr	0,__pbssCOMRAM
   186  007328  0E18               	movlw	24
   187  00732A                     clear_0:
   188  00732A  6AEE               	clrf	postinc0,c
   189  00732C  06E8               	decf	wreg,f,c
   190  00732E  E1FD               	bnz	clear_0
   191                           
   192                           ; Initialize objects allocated to COMRAM (12 bytes)
   193                           ; load TBLPTR registers with __pidataCOMRAM
   194  007330  0ED8               	movlw	low __pidataCOMRAM
   195  007332  6EF6               	movwf	tblptrl,c
   196  007334  0E72               	movlw	high __pidataCOMRAM
   197  007336  6EF7               	movwf	tblptrh,c
   198  007338  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   199  00733A  6EF8               	movwf	tblptru,c
   200  00733C  EE00  F050         	lfsr	0,__pdataCOMRAM
   201  007340  EE10 F00C          	lfsr	1,12
   202  007344                     copy_data0:
   203  007344  0009               	tblrd		*+
   204  007346  CFF5 FFEE          	movff	tablat,postinc0
   205  00734A  50E5               	movf	postdec1,w,c
   206  00734C  50E1               	movf	fsr1l,w,c
   207  00734E  E1FA               	bnz	copy_data0
   208  007350                     end_of_initialization:
   209                           	opt stack 0
   210  007350                     __end_of__initialization:
   211                           	opt stack 0
   212  007350  0E00               	movlw	low (__Lmediumconst shr (0+16))
   213  007352  6EF8               	movwf	tblptru,c
   214  007354  0100               	movlb	0
   215  007356  EF6C  F03C         	goto	_main	;jump to C main() function
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           postdec1	equ	0xFE5
   223                           fsr1l	equ	0xFE1
   224                           
   225                           	psect	bssCOMRAM
   226  000038                     __pbssCOMRAM:
   227                           	opt stack 0
   228  000038                     _i:
   229                           	opt stack 0
   230  000038                     	ds	2
   231  00003A                     _k:
   232                           	opt stack 0
   233  00003A                     	ds	1
   234  00003B                     _s:
   235                           	opt stack 0
   236  00003B                     	ds	1
   237  00003C                     _buffer1:
   238                           	opt stack 0
   239  00003C                     	ds	20
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           wreg	equ	0xFE8
   246                           postdec1	equ	0xFE5
   247                           fsr1l	equ	0xFE1
   248                           
   249                           	psect	dataCOMRAM
   250  000050                     __pdataCOMRAM:
   251                           	opt stack 0
   252  000050                     _R:
   253                           	opt stack 0
   254  000050                     	ds	2
   255  000052                     _REG:
   256                           	opt stack 0
   257  000052                     	ds	1
   258  000053                     _REGad:
   259                           	opt stack 0
   260  000053                     	ds	1
   261  000054                     _sino:
   262                           	opt stack 0
   263  000054                     	ds	8
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           wreg	equ	0xFE8
   270                           postdec1	equ	0xFE5
   271                           fsr1l	equ	0xFE1
   272                           
   273                           	psect	cstackCOMRAM
   274  000001                     __pcstackCOMRAM:
   275                           	opt stack 0
   276  000001                     ??_interrupcao:
   277  000001                     
   278                           ; 1 bytes @ 0x0
   279  000001                     	ds	14
   280  00000F                     ?___awdiv:
   281                           	opt stack 0
   282  00000F                     ?___awmod:
   283                           	opt stack 0
   284  00000F                     habilita_canal_AD@canal:
   285                           	opt stack 0
   286  00000F                     le_eeprom@endereco:
   287                           	opt stack 0
   288  00000F                     Delay1KTCYx@unit:
   289                           	opt stack 0
   290  00000F                     inverte_saida@pino:
   291                           	opt stack 0
   292  00000F                     ___awdiv@dividend:
   293                           	opt stack 0
   294  00000F                     ___awmod@dividend:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0xE
   298  00000F                     	ds	1
   299  000010                     ??_Lcd_Cmd:
   300  000010                     ??_Lcd_Chr_CP:
   301  000010                     tempo_ms@i:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0xF
   305  000010                     	ds	1
   306  000011                     ??_inverte_saida:
   307  000011                     ___awdiv@divisor:
   308                           	opt stack 0
   309  000011                     ___awmod@divisor:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x10
   313  000011                     	ds	1
   314  000012                     Lcd_Chr_CP@Chr_CP:
   315                           	opt stack 0
   316  000012                     Lcd_Cmd@Cmd:
   317                           	opt stack 0
   318  000012                     tempo_ms@k:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x11
   322  000012                     	ds	1
   323  000013                     ??___awdiv:
   324  000013                     ??___awmod:
   325  000013                     lcd_escreve@x:
   326                           	opt stack 0
   327  000013                     lcd_escreve2@x:
   328                           	opt stack 0
   329  000013                     Lcd_Chr@x:
   330                           	opt stack 0
   331  000013                     CGRAM_SanUSB@ptr:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x12
   335  000013                     	ds	1
   336  000014                     ?_le_AD10bits:
   337                           	opt stack 0
   338  000014                     Lcd_Chr@Chr:
   339                           	opt stack 0
   340  000014                     ___awdiv@counter:
   341                           	opt stack 0
   342  000014                     ___awmod@counter:
   343                           	opt stack 0
   344  000014                     lcd_escreve@buffer:
   345                           	opt stack 0
   346  000014                     lcd_escreve2@buffer:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x13
   350  000014                     	ds	1
   351  000015                     ??_CGRAM_SanUSB:
   352  000015                     Lcd_Chr@y:
   353                           	opt stack 0
   354  000015                     ___awdiv@sign:
   355                           	opt stack 0
   356  000015                     ___awmod@sign:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x14
   360  000015                     	ds	1
   361  000016                     ?___lwdiv:
   362                           	opt stack 0
   363  000016                     le_AD10bits@conv:
   364                           	opt stack 0
   365  000016                     lcd_escreve@y:
   366                           	opt stack 0
   367  000016                     lcd_escreve2@y:
   368                           	opt stack 0
   369  000016                     Lcd_Chr@data:
   370                           	opt stack 0
   371  000016                     ___awdiv@quotient:
   372                           	opt stack 0
   373  000016                     ___lwdiv@dividend:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x15
   377  000016                     	ds	1
   378  000017                     lcd_escreve@data:
   379                           	opt stack 0
   380  000017                     lcd_escreve2@data:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x16
   384  000017                     	ds	1
   385  000018                     ??_lcd_ini:
   386  000018                     CGRAM_SanUSB@location:
   387                           	opt stack 0
   388  000018                     ___lwdiv@divisor:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x17
   392  000018                     	ds	1
   393  000019                     lcd_ini@data:
   394                           	opt stack 0
   395  000019                     CGRAM_SanUSB@i:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x18
   399  000019                     	ds	1
   400  00001A                     ??___lwdiv:
   401  00001A                     CGRAM_SanUSB@j:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x19
   405  00001A                     	ds	1
   406  00001B                     ___lwdiv@quotient:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x1A
   410  00001B                     	ds	2
   411  00001D                     ___lwdiv@counter:
   412                           	opt stack 0
   413                           
   414                           ; 1 bytes @ 0x1C
   415  00001D                     	ds	1
   416  00001E                     ?___lwmod:
   417                           	opt stack 0
   418  00001E                     ___lwmod@dividend:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x1D
   422  00001E                     	ds	2
   423  000020                     ___lwmod@divisor:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x1F
   427  000020                     	ds	2
   428  000022                     ??___lwmod:
   429                           
   430                           ; 0 bytes @ 0x21
   431  000022                     	ds	1
   432  000023                     ___lwmod@counter:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x22
   436  000023                     	ds	1
   437  000024                     ?_sprintf:
   438                           	opt stack 0
   439  000024                     sprintf@sp:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x23
   443  000024                     	ds	2
   444  000026                     sprintf@f:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x25
   448  000026                     	ds	4
   449  00002A                     ??_sprintf:
   450                           
   451                           ; 0 bytes @ 0x29
   452  00002A                     	ds	2
   453  00002C                     sprintf@ap:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x2B
   457  00002C                     	ds	2
   458  00002E                     sprintf@flag:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x2D
   462  00002E                     	ds	1
   463  00002F                     sprintf@prec:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x2E
   467  00002F                     	ds	1
   468  000030                     sprintf@_val:
   469                           	opt stack 0
   470                           
   471                           ; 5 bytes @ 0x2F
   472  000030                     	ds	5
   473  000035                     sprintf@c:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x34
   477  000035                     	ds	1
   478  000036                     ??_main:
   479                           
   480                           ; 0 bytes @ 0x35
   481  000036                     	ds	2
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           
   491 ;;
   492 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   493 ;;
   494 ;; *************** function _main *****************
   495 ;; Defined at:
   496 ;;		line 11 in file "ExemploLCD.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;		None               void
   503 ;; Registers used:
   504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   510 ;;      Params:         0       0       0       0       0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0       0       0       0       0
   512 ;;      Temps:          2       0       0       0       0       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels required when called:    5
   516 ;; This function calls:
   517 ;;		_CGRAM_SanUSB
   518 ;;		_Lcd_Chr
   519 ;;		_Lcd_Cmd
   520 ;;		_clock_int_4MHz
   521 ;;		_habilita_canal_AD
   522 ;;		_inverte_saida
   523 ;;		_lcd_escreve
   524 ;;		_lcd_escreve2
   525 ;;		_lcd_ini
   526 ;;		_le_AD10bits
   527 ;;		_sprintf
   528 ;;		_tempo_ms
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text0
   535  0078D8                     __ptext0:
   536                           	opt stack 0
   537  0078D8                     _main:
   538                           	opt stack 26
   539                           
   540                           ;ExemploLCD.c: 12: clock_int_4MHz();
   541                           
   542                           ;incstack = 0
   543  0078D8  EC42  F03B         	call	_clock_int_4MHz	;wreg free
   544                           
   545                           ;ExemploLCD.c: 13: habilita_canal_AD(0x0E);
   546  0078DC  0E0E               	movlw	14
   547  0078DE  EC7B  F039         	call	_habilita_canal_AD
   548                           
   549                           ;ExemploLCD.c: 15: lcd_ini();
   550  0078E2  ECEF  F03C         	call	_lcd_ini	;wreg free
   551                           
   552                           ;ExemploLCD.c: 17: Lcd_Cmd(12);
   553  0078E6  0E0C               	movlw	12
   554  0078E8  EC76  F03D         	call	_Lcd_Cmd
   555                           
   556                           ;ExemploLCD.c: 18: tempo_ms(100);
   557  0078EC  0E00               	movlw	0
   558  0078EE  6E11               	movwf	tempo_ms@i+1,c
   559  0078F0  0E64               	movlw	100
   560  0078F2  6E10               	movwf	tempo_ms@i,c
   561  0078F4  ECAD  F039         	call	_tempo_ms	;wreg free
   562                           
   563                           ;ExemploLCD.c: 20: CGRAM_SanUSB(1,sino);
   564  0078F8  0E00               	movlw	high _sino
   565  0078FA  6E14               	movwf	CGRAM_SanUSB@ptr+1,c
   566  0078FC  0E54               	movlw	low _sino
   567  0078FE  6E13               	movwf	CGRAM_SanUSB@ptr,c
   568  007900  0E01               	movlw	1
   569  007902  EC0C  F03B         	call	_CGRAM_SanUSB
   570                           
   571                           ;ExemploLCD.c: 21: tempo_ms(300);
   572  007906  0E01               	movlw	1
   573  007908  6E11               	movwf	tempo_ms@i+1,c
   574  00790A  0E2C               	movlw	44
   575  00790C  6E10               	movwf	tempo_ms@i,c
   576  00790E  ECAD  F039         	call	_tempo_ms	;wreg free
   577                           
   578                           ;ExemploLCD.c: 22: Lcd_Chr(1, 2, 1);
   579  007912  6E36               	movwf	??_main& (0+255),c
   580  007914  0E02               	movlw	2
   581  007916  6E13               	movwf	Lcd_Chr@x,c
   582  007918  5036               	movf	??_main& (0+255),w,c
   583  00791A  6E37               	movwf	(??_main+1)& (0+255),c
   584  00791C  0E01               	movlw	1
   585  00791E  6E14               	movwf	Lcd_Chr@Chr,c
   586  007920  5037               	movf	(??_main+1)& (0+255),w,c
   587  007922  0E01               	movlw	1
   588  007924  ECEF  F039         	call	_Lcd_Chr
   589                           
   590                           ;ExemploLCD.c: 24: tempo_ms(500);
   591  007928  0E01               	movlw	1
   592  00792A  6E11               	movwf	tempo_ms@i+1,c
   593  00792C  0EF4               	movlw	244
   594  00792E  6E10               	movwf	tempo_ms@i,c
   595  007930  ECAD  F039         	call	_tempo_ms	;wreg free
   596                           
   597                           ;ExemploLCD.c: 26: lcd_escreve(1, 3, "Microcontrol");
   598  007934  6E36               	movwf	??_main& (0+255),c
   599  007936  0E03               	movlw	3
   600  007938  6E13               	movwf	lcd_escreve@x,c
   601  00793A  5036               	movf	??_main& (0+255),w,c
   602  00793C  0E10               	movlw	high STR_1
   603  00793E  6E15               	movwf	lcd_escreve@buffer+1,c
   604  007940  0E27               	movlw	low STR_1
   605  007942  6E14               	movwf	lcd_escreve@buffer,c
   606  007944  0E01               	movlw	1
   607  007946  ECD7  F03A         	call	_lcd_escreve
   608                           
   609                           ;ExemploLCD.c: 27: tempo_ms(500);
   610  00794A  0E01               	movlw	1
   611  00794C  6E11               	movwf	tempo_ms@i+1,c
   612  00794E  0EF4               	movlw	244
   613  007950  6E10               	movwf	tempo_ms@i,c
   614  007952  ECAD  F039         	call	_tempo_ms	;wreg free
   615                           
   616                           ;ExemploLCD.c: 29: lcd_escreve(2, 1, "Converte");
   617  007956  6E36               	movwf	??_main& (0+255),c
   618  007958  0E01               	movlw	1
   619  00795A  6E13               	movwf	lcd_escreve@x,c
   620  00795C  5036               	movf	??_main& (0+255),w,c
   621  00795E  0E10               	movlw	high STR_2
   622  007960  6E15               	movwf	lcd_escreve@buffer+1,c
   623  007962  0E34               	movlw	low STR_2
   624  007964  6E14               	movwf	lcd_escreve@buffer,c
   625  007966  0E02               	movlw	2
   626  007968  ECD7  F03A         	call	_lcd_escreve
   627                           
   628                           ;ExemploLCD.c: 30: tempo_ms(500);
   629  00796C  0E01               	movlw	1
   630  00796E  6E11               	movwf	tempo_ms@i+1,c
   631  007970  0EF4               	movlw	244
   632  007972  6E10               	movwf	tempo_ms@i,c
   633  007974  ECAD  F039         	call	_tempo_ms	;wreg free
   634  007978                     l2465:
   635                           
   636                           ;ExemploLCD.c: 33: {
   637                           ;ExemploLCD.c: 34: i= le_AD10bits(0);
   638  007978  0E00               	movlw	0
   639  00797A  ECC6  F03B         	call	_le_AD10bits
   640  00797E  C014  F038         	movff	?_le_AD10bits,_i
   641  007982  C015  F039         	movff	?_le_AD10bits+1,_i+1
   642                           
   643                           ;ExemploLCD.c: 35: inverte_saida(31759);inverte_saida(31775);
   644  007986  0E7C               	movlw	124
   645  007988  6E10               	movwf	inverte_saida@pino+1,c
   646  00798A  0E0F               	movlw	15
   647  00798C  6E0F               	movwf	inverte_saida@pino,c
   648  00798E  ECA0  F03E         	call	_inverte_saida	;wreg free
   649  007992  0E7C               	movlw	124
   650  007994  6E10               	movwf	inverte_saida@pino+1,c
   651  007996  0E1F               	movlw	31
   652  007998  6E0F               	movwf	inverte_saida@pino,c
   653  00799A  ECA0  F03E         	call	_inverte_saida	;wreg free
   654                           
   655                           ;ExemploLCD.c: 36: sprintf(buffer1,"%d  ",i);
   656  00799E  0E00               	movlw	high _buffer1
   657  0079A0  6E25               	movwf	sprintf@sp+1,c
   658  0079A2  0E3C               	movlw	low _buffer1
   659  0079A4  6E24               	movwf	sprintf@sp,c
   660  0079A6  0E10               	movlw	high STR_3
   661  0079A8  6E27               	movwf	sprintf@f+1,c
   662  0079AA  0E3D               	movlw	low STR_3
   663  0079AC  6E26               	movwf	sprintf@f,c
   664  0079AE  C038  F028         	movff	_i,?_sprintf+4
   665  0079B2  C039  F029         	movff	_i+1,?_sprintf+5
   666  0079B6  EC4D  F03F         	call	_sprintf	;wreg free
   667                           
   668                           ;ExemploLCD.c: 37: lcd_escreve2(2, 12, buffer1);
   669  0079BA  6E36               	movwf	??_main& (0+255),c
   670  0079BC  0E0C               	movlw	12
   671  0079BE  6E13               	movwf	lcd_escreve2@x,c
   672  0079C0  5036               	movf	??_main& (0+255),w,c
   673  0079C2  0E00               	movlw	high _buffer1
   674  0079C4  6E15               	movwf	lcd_escreve2@buffer+1,c
   675  0079C6  0E3C               	movlw	low _buffer1
   676  0079C8  6E14               	movwf	lcd_escreve2@buffer,c
   677  0079CA  0E02               	movlw	2
   678  0079CC  EC3E  F03A         	call	_lcd_escreve2
   679                           
   680                           ;ExemploLCD.c: 38: tempo_ms(300);
   681  0079D0  0E01               	movlw	1
   682  0079D2  6E11               	movwf	tempo_ms@i+1,c
   683  0079D4  0E2C               	movlw	44
   684  0079D6  6E10               	movwf	tempo_ms@i,c
   685  0079D8  ECAD  F039         	call	_tempo_ms	;wreg free
   686  0079DC  D7CD               	goto	l2465
   687  0079DE                     __end_of_main:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           postdec1	equ	0xFE5
   696                           fsr1l	equ	0xFE1
   697                           
   698 ;; *************** function _sprintf *****************
   699 ;; Defined at:
   700 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\doprnt.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  sp              2   35[COMRAM] PTR unsigned char 
   703 ;;		 -> buffer1(20), 
   704 ;;  f               2   37[COMRAM] PTR const unsigned char 
   705 ;;		 -> STR_3(5), 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  _val            5   47[COMRAM] struct .
   708 ;;  ap              2   43[COMRAM] PTR void [1]
   709 ;;		 -> ?_sprintf(2), 
   710 ;;  c               1   52[COMRAM] char 
   711 ;;  prec            1   46[COMRAM] char 
   712 ;;  flag            1   45[COMRAM] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2   35[COMRAM] int 
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   722 ;;      Params:         6       0       0       0       0       0       0       0       0
   723 ;;      Locals:        10       0       0       0       0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0       0       0
   725 ;;      Totals:        18       0       0       0       0       0       0       0       0
   726 ;;Total ram usage:       18 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    2
   729 ;; This function calls:
   730 ;;		___lwdiv
   731 ;;		___lwmod
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text1
   738  007E9A                     __ptext1:
   739                           	opt stack 0
   740  007E9A                     _sprintf:
   741                           	opt stack 28
   742                           
   743                           ;doprnt.c: 494: va_list ap;
   744                           ;doprnt.c: 499: signed char c;
   745                           ;doprnt.c: 506: signed char prec;
   746                           ;doprnt.c: 508: unsigned char flag;
   747                           ;doprnt.c: 527: union {
   748                           ;doprnt.c: 528: unsigned int _val;
   749                           ;doprnt.c: 529: struct {
   750                           ;doprnt.c: 530: const char * _cp;
   751                           ;doprnt.c: 531: unsigned _len;
   752                           ;doprnt.c: 532: } _str;
   753                           ;doprnt.c: 533: } _val;
   754                           ;doprnt.c: 542: *ap = __va_start();
   755                           
   756                           ;incstack = 0
   757  007E9A  0E00               	movlw	high (?_sprintf+4)
   758  007E9C  6E2D               	movwf	sprintf@ap+1,c
   759  007E9E  0E28               	movlw	low (?_sprintf+4)
   760  007EA0  6E2C               	movwf	sprintf@ap,c
   761                           
   762                           ;doprnt.c: 545: while(c = *f++) {
   763  007EA2  D09C               	goto	l2151
   764  007EA4                     l2099:
   765                           
   766                           ;doprnt.c: 547: if(c != '%')
   767  007EA4  5035               	movf	sprintf@c,w,c
   768  007EA6  0A25               	xorlw	37
   769  007EA8  B4D8               	btfsc	status,2,c
   770  007EAA  D009               	goto	l2105
   771                           
   772                           ;doprnt.c: 549: {
   773                           ;doprnt.c: 550: ((*sp++ = (c)));
   774  007EAC  C024  FFD9         	movff	sprintf@sp,fsr2l
   775  007EB0  C025  FFDA         	movff	sprintf@sp+1,fsr2h
   776  007EB4  C035  FFDF         	movff	sprintf@c,indf2
   777  007EB8  4A24               	infsnz	sprintf@sp,f,c
   778  007EBA  2A25               	incf	sprintf@sp+1,f,c
   779                           
   780                           ;doprnt.c: 551: continue;
   781  007EBC  D08F               	goto	l2151
   782  007EBE                     l2105:
   783                           
   784                           ;doprnt.c: 552: }
   785                           ;doprnt.c: 557: flag = 0;
   786  007EBE  6E2A               	movwf	??_sprintf& (0+255),c
   787  007EC0  0E00               	movlw	0
   788  007EC2  6E2E               	movwf	sprintf@flag,c
   789  007EC4  502A               	movf	??_sprintf& (0+255),w,c
   790                           
   791                           ;doprnt.c: 831: }
   792                           
   793                           ;doprnt.c: 822: continue;
   794                           
   795                           ;doprnt.c: 811: default:
   796                           
   797                           ;doprnt.c: 707: case 'i':
   798                           ;doprnt.c: 708: break;
   799                           
   800                           ;doprnt.c: 706: case 'd':
   801                           
   802                           ;doprnt.c: 647: goto alldone;
   803                           
   804                           ;doprnt.c: 646: case 0:
   805                           
   806                           ;doprnt.c: 644: switch(c = *f++) {
   807  007EC6  C026  FFF6         	movff	sprintf@f,tblptrl
   808  007ECA  C027  FFF7         	movff	sprintf@f+1,tblptrh
   809  007ECE  4A26               	infsnz	sprintf@f,f,c
   810  007ED0  2A27               	incf	sprintf@f+1,f,c
   811  007ED2  0008               	tblrd		*
   812  007ED4  CFF5 F035          	movff	tablat,sprintf@c
   813  007ED8  5035               	movf	sprintf@c& (0+255),w,c
   814                           
   815                           ; Switch size 1, requested type "space"
   816                           ; Number of cases is 3, Range of values is 0 to 105
   817                           ; switch strategies available:
   818                           ; Name         Instructions Cycles
   819                           ; simple_byte           10     6 (average)
   820                           ;	Chosen strategy is simple_byte
   821  007EDA  0A00               	xorlw	0	; case 0
   822  007EDC  B4D8               	btfsc	status,2,c
   823  007EDE  D089               	goto	l2153
   824  007EE0  0A64               	xorlw	100	; case 100
   825  007EE2  B4D8               	btfsc	status,2,c
   826  007EE4  D003               	goto	l2111
   827  007EE6  0A0D               	xorlw	13	; case 105
   828  007EE8  A4D8               	btfss	status,2,c
   829  007EEA  D078               	goto	l2151
   830  007EEC                     l2111:
   831                           
   832                           ;doprnt.c: 1262: {
   833                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   834  007EEC  C02C  FFD9         	movff	sprintf@ap,fsr2l
   835  007EF0  C02D  FFDA         	movff	sprintf@ap+1,fsr2h
   836  007EF4  CFDE F030          	movff	postinc2,sprintf@_val
   837  007EF8  CFDD F031          	movff	postdec2,sprintf@_val+1
   838  007EFC  0E02               	movlw	2
   839  007EFE  262C               	addwf	sprintf@ap,f,c
   840  007F00  0E00               	movlw	0
   841  007F02  222D               	addwfc	sprintf@ap+1,f,c
   842                           
   843                           ;doprnt.c: 1270: if((int)_val._val < 0) {
   844  007F04  5031               	movf	sprintf@_val+1,w,c
   845  007F06  0A80               	xorlw	128
   846  007F08  6EF3               	movwf	prodl,c
   847  007F0A  0E80               	movlw	128
   848  007F0C  5CF3               	subwf	prodl,w,c
   849  007F0E  0E00               	movlw	0
   850  007F10  B4D8               	btfsc	status,2,c
   851  007F12  5C30               	subwf	sprintf@_val,w,c
   852  007F14  B0D8               	btfsc	status,0,c
   853  007F16  D006               	goto	l2121
   854                           
   855                           ;doprnt.c: 1271: flag |= 0x03;
   856  007F18  0E03               	movlw	3
   857  007F1A  122E               	iorwf	sprintf@flag,f,c
   858                           
   859                           ;doprnt.c: 1272: _val._val = -_val._val;
   860  007F1C  6C30               	negf	sprintf@_val,c
   861  007F1E  1E31               	comf	sprintf@_val+1,f,c
   862  007F20  B0D8               	btfsc	status,0,c
   863  007F22  2A31               	incf	sprintf@_val+1,f,c
   864  007F24                     l2121:
   865                           
   866                           ;doprnt.c: 1273: }
   867                           ;doprnt.c: 1275: }
   868                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   869  007F24  6E2A               	movwf	??_sprintf& (0+255),c
   870  007F26  0E01               	movlw	1
   871  007F28  6E35               	movwf	sprintf@c,c
   872  007F2A  502A               	movf	??_sprintf& (0+255),w,c
   873  007F2C  5035               	movf	sprintf@c,w,c
   874  007F2E  0A05               	xorlw	5
   875  007F30  B4D8               	btfsc	status,2,c
   876  007F32  D016               	goto	l2135
   877                           
   878                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
   879  007F34  5035               	movf	sprintf@c,w,c
   880  007F36  0D02               	mullw	2
   881  007F38  0E1D               	movlw	low _dpowers
   882  007F3A  24F3               	addwf	prodl,w,c
   883  007F3C  6EF6               	movwf	tblptrl,c
   884  007F3E  0E10               	movlw	high _dpowers
   885  007F40  20F4               	addwfc	prodh,w,c
   886  007F42  6EF7               	movwf	tblptrh,c
   887  007F44  0009               	tblrd		*+
   888  007F46  CFF5 F02A          	movff	tablat,??_sprintf
   889  007F4A  0009               	tblrd		*+
   890  007F4C  CFF5 F02B          	movff	tablat,??_sprintf+1
   891  007F50  502A               	movf	??_sprintf,w,c
   892  007F52  5C30               	subwf	sprintf@_val,w,c
   893  007F54  502B               	movf	??_sprintf+1,w,c
   894  007F56  5831               	subwfb	sprintf@_val+1,w,c
   895  007F58  A0D8               	btfss	status,0,c
   896  007F5A  D002               	goto	l2135
   897                           
   898                           ;doprnt.c: 1316: break;
   899  007F5C  2A35               	incf	sprintf@c,f,c
   900  007F5E  D7E6               	goto	L1
   901  007F60                     l2135:
   902                           
   903                           ;doprnt.c: 1431: {
   904                           ;doprnt.c: 1447: if(flag & 0x03)
   905  007F60  C02E  F02A         	movff	sprintf@flag,??_sprintf
   906  007F64  0E03               	movlw	3
   907  007F66  162A               	andwf	??_sprintf,f,c
   908  007F68  B4D8               	btfsc	status,2,c
   909  007F6A  D008               	goto	l2141
   910                           
   911                           ;doprnt.c: 1448: ((*sp++ = ('-')));
   912  007F6C  C024  FFD9         	movff	sprintf@sp,fsr2l
   913  007F70  C025  FFDA         	movff	sprintf@sp+1,fsr2h
   914  007F74  0E2D               	movlw	45
   915  007F76  6EDF               	movwf	indf2,c
   916  007F78  4A24               	infsnz	sprintf@sp,f,c
   917  007F7A  2A25               	incf	sprintf@sp+1,f,c
   918  007F7C                     l2141:
   919                           
   920                           ;doprnt.c: 1478: }
   921                           ;doprnt.c: 1481: prec = c;
   922  007F7C  C035  F02F         	movff	sprintf@c,sprintf@prec
   923                           
   924                           ;doprnt.c: 1483: while(prec--) {
   925  007F80  D029               	goto	l2149
   926  007F82                     l2143:
   927                           
   928                           ;doprnt.c: 1487: {
   929                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
   930  007F82  502F               	movf	sprintf@prec,w,c
   931  007F84  0D02               	mullw	2
   932  007F86  0E1D               	movlw	low _dpowers
   933  007F88  24F3               	addwf	prodl,w,c
   934  007F8A  6EF6               	movwf	tblptrl,c
   935  007F8C  0E10               	movlw	high _dpowers
   936  007F8E  20F4               	addwfc	prodh,w,c
   937  007F90  6EF7               	movwf	tblptrh,c
   938  007F92  0009               	tblrd		*+
   939  007F94  CFF5 F018          	movff	tablat,___lwdiv@divisor
   940  007F98  000A               	tblrd		*-
   941  007F9A  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
   942  007F9E  C030  F016         	movff	sprintf@_val,___lwdiv@dividend
   943  007FA2  C031  F017         	movff	sprintf@_val+1,___lwdiv@dividend+1
   944  007FA6  EC13  F03A         	call	___lwdiv	;wreg free
   945  007FAA  C016  F01E         	movff	?___lwdiv,___lwmod@dividend
   946  007FAE  C017  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
   947  007FB2  0E00               	movlw	0
   948  007FB4  6E21               	movwf	___lwmod@divisor+1,c
   949  007FB6  0E0A               	movlw	10
   950  007FB8  6E20               	movwf	___lwmod@divisor,c
   951  007FBA  ECCC  F039         	call	___lwmod	;wreg free
   952  007FBE  501E               	movf	?___lwmod,w,c
   953  007FC0  0F30               	addlw	48
   954  007FC2  6E35               	movwf	sprintf@c,c
   955                           
   956                           ;doprnt.c: 1532: }
   957                           ;doprnt.c: 1533: ((*sp++ = (c)));
   958  007FC4  C024  FFD9         	movff	sprintf@sp,fsr2l
   959  007FC8  C025  FFDA         	movff	sprintf@sp+1,fsr2h
   960  007FCC  C035  FFDF         	movff	sprintf@c,indf2
   961  007FD0  4A24               	infsnz	sprintf@sp,f,c
   962  007FD2  2A25               	incf	sprintf@sp+1,f,c
   963  007FD4                     l2149:
   964  007FD4  062F               	decf	sprintf@prec,f,c
   965  007FD6  282F               	incf	sprintf@prec& (0+255),w,c
   966  007FD8  A4D8               	btfss	status,2,c
   967  007FDA  D7D3               	goto	l2143
   968  007FDC                     l2151:
   969  007FDC  C026  FFF6         	movff	sprintf@f,tblptrl
   970  007FE0  C027  FFF7         	movff	sprintf@f+1,tblptrh
   971  007FE4  4A26               	infsnz	sprintf@f,f,c
   972  007FE6  2A27               	incf	sprintf@f+1,f,c
   973  007FE8  0008               	tblrd		*
   974  007FEA  CFF5 F035          	movff	tablat,sprintf@c
   975  007FEE  6635               	tstfsz	sprintf@c& (0+255),c
   976  007FF0  D759               	goto	l2099
   977  007FF2                     l2153:
   978                           
   979                           ;doprnt.c: 1547: *sp = 0;
   980  007FF2  C024  FFD9         	movff	sprintf@sp,fsr2l
   981  007FF6  C025  FFDA         	movff	sprintf@sp+1,fsr2h
   982  007FFA  0E00               	movlw	0
   983  007FFC  6EDF               	movwf	indf2,c
   984                           
   985                           ;doprnt.c: 1549: return 0;
   986                           ;	Return value of _sprintf is never used
   987  007FFE  0012               	return	
   988  008000                     __end_of_sprintf:
   989                           	opt stack 0
   990                           tblptru	equ	0xFF8
   991                           tblptrh	equ	0xFF7
   992                           tblptrl	equ	0xFF6
   993                           tablat	equ	0xFF5
   994                           prodh	equ	0xFF4
   995                           prodl	equ	0xFF3
   996                           postinc0	equ	0xFEE
   997                           wreg	equ	0xFE8
   998                           postdec1	equ	0xFE5
   999                           fsr1l	equ	0xFE1
  1000                           indf2	equ	0xFDF
  1001                           postinc2	equ	0xFDE
  1002                           postdec2	equ	0xFDD
  1003                           fsr2h	equ	0xFDA
  1004                           fsr2l	equ	0xFD9
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function ___lwmod *****************
  1008 ;; Defined at:
  1009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwmod.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  dividend        2   29[COMRAM] unsigned int 
  1012 ;;  divisor         2   31[COMRAM] unsigned int 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  counter         1   34[COMRAM] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  2   29[COMRAM] unsigned int 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1024 ;;      Params:         4       0       0       0       0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1026 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1027 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1028 ;;Total ram usage:        6 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_sprintf
  1035 ;;		_sendnum
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text2
  1040  007398                     __ptext2:
  1041                           	opt stack 0
  1042  007398                     ___lwmod:
  1043                           	opt stack 28
  1044                           
  1045                           ;incstack = 0
  1046  007398  5021               	movf	___lwmod@divisor+1,w,c
  1047  00739A  1020               	iorwf	___lwmod@divisor,w,c
  1048  00739C  B4D8               	btfsc	status,2,c
  1049  00739E  D01A               	goto	l1129
  1050  0073A0  6E22               	movwf	??___lwmod& (0+255),c
  1051  0073A2  0E01               	movlw	1
  1052  0073A4  6E23               	movwf	___lwmod@counter,c
  1053  0073A6  5022               	movf	??___lwmod& (0+255),w,c
  1054  0073A8  D004               	goto	l1857
  1055  0073AA                     l1855:
  1056  0073AA  90D8               	bcf	status,0,c
  1057  0073AC  3620               	rlcf	___lwmod@divisor,f,c
  1058  0073AE  3621               	rlcf	___lwmod@divisor+1,f,c
  1059  0073B0  2A23               	incf	___lwmod@counter,f,c
  1060  0073B2                     l1857:
  1061  0073B2  AE21               	btfss	___lwmod@divisor+1,7,c
  1062  0073B4  D7FA               	goto	l1855
  1063  0073B6                     l1859:
  1064  0073B6  5020               	movf	___lwmod@divisor,w,c
  1065  0073B8  5C1E               	subwf	___lwmod@dividend,w,c
  1066  0073BA  5021               	movf	___lwmod@divisor+1,w,c
  1067  0073BC  581F               	subwfb	___lwmod@dividend+1,w,c
  1068  0073BE  A0D8               	btfss	status,0,c
  1069  0073C0  D004               	goto	l1863
  1070  0073C2  5020               	movf	___lwmod@divisor,w,c
  1071  0073C4  5E1E               	subwf	___lwmod@dividend,f,c
  1072  0073C6  5021               	movf	___lwmod@divisor+1,w,c
  1073  0073C8  5A1F               	subwfb	___lwmod@dividend+1,f,c
  1074  0073CA                     l1863:
  1075  0073CA  90D8               	bcf	status,0,c
  1076  0073CC  3221               	rrcf	___lwmod@divisor+1,f,c
  1077  0073CE  3220               	rrcf	___lwmod@divisor,f,c
  1078  0073D0  2E23               	decfsz	___lwmod@counter,f,c
  1079  0073D2  D7F1               	goto	l1859
  1080  0073D4                     l1129:
  1081  0073D4  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
  1082  0073D8  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
  1083  0073DC  0012               	return	
  1084  0073DE                     __end_of___lwmod:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           prodh	equ	0xFF4
  1091                           prodl	equ	0xFF3
  1092                           postinc0	equ	0xFEE
  1093                           wreg	equ	0xFE8
  1094                           postdec1	equ	0xFE5
  1095                           fsr1l	equ	0xFE1
  1096                           indf2	equ	0xFDF
  1097                           postinc2	equ	0xFDE
  1098                           postdec2	equ	0xFDD
  1099                           fsr2h	equ	0xFDA
  1100                           fsr2l	equ	0xFD9
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _le_AD10bits *****************
  1104 ;; Defined at:
  1105 ;;		line 366 in file "SanUSB1X.h"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  conv            1    wreg     unsigned char 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  conv            1   21[COMRAM] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  2   19[COMRAM] unsigned int 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1119 ;;      Params:         2       0       0       0       0       0       0       0       0
  1120 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1122 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1123 ;;Total ram usage:        3 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    3
  1126 ;; This function calls:
  1127 ;;		_tempo_ms
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text3
  1134  00778C                     __ptext3:
  1135                           	opt stack 0
  1136  00778C                     _le_AD10bits:
  1137                           	opt stack 27
  1138                           
  1139                           ;incstack = 0
  1140                           ;le_AD10bits@conv stored from wreg
  1141  00778C  CFE8 F016          	movff	wreg,le_AD10bits@conv
  1142                           
  1143                           ;SanUSB1X.h: 367: switch(conv){
  1144  007790  D015               	goto	l1903
  1145  007792                     l1881:
  1146  007792  0E01               	movlw	1
  1147  007794  D011               	goto	L10
  1148  007796                     l1883:
  1149  007796  0E05               	movlw	5
  1150  007798  D00F               	goto	L10
  1151  00779A                     l1885:
  1152  00779A  0E09               	movlw	9
  1153  00779C  D00D               	goto	L10
  1154  00779E                     l1887:
  1155  00779E  0E0D               	movlw	13
  1156  0077A0  D00B               	goto	L10
  1157  0077A2                     l1889:
  1158  0077A2  0E11               	movlw	17
  1159  0077A4  D009               	goto	L10
  1160  0077A6                     l1891:
  1161  0077A6  0E21               	movlw	33
  1162  0077A8  D007               	goto	L10
  1163  0077AA                     l1893:
  1164  0077AA  0E25               	movlw	37
  1165  0077AC  D005               	goto	L10
  1166  0077AE                     l1895:
  1167  0077AE  0E29               	movlw	41
  1168  0077B0  D003               	goto	L10
  1169  0077B2                     l1897:
  1170  0077B2  0E2D               	movlw	45
  1171  0077B4  D001               	goto	L10
  1172  0077B6                     l1899:
  1173  0077B6  0E31               	movlw	49
  1174  0077B8                     L10:
  1175  0077B8  6EC2               	movwf	4034,c	;volatile
  1176  0077BA  D01F               	goto	l1905
  1177  0077BC                     l1903:
  1178  0077BC  5016               	movf	le_AD10bits@conv,w,c
  1179                           
  1180                           ; Switch size 1, requested type "space"
  1181                           ; Number of cases is 10, Range of values is 0 to 12
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte           31    16 (average)
  1185                           ;	Chosen strategy is simple_byte
  1186  0077BE  0A00               	xorlw	0	; case 0
  1187  0077C0  B4D8               	btfsc	status,2,c
  1188  0077C2  D7E7               	goto	l1881
  1189  0077C4  0A01               	xorlw	1	; case 1
  1190  0077C6  B4D8               	btfsc	status,2,c
  1191  0077C8  D7E6               	goto	l1883
  1192  0077CA  0A03               	xorlw	3	; case 2
  1193  0077CC  B4D8               	btfsc	status,2,c
  1194  0077CE  D7E5               	goto	l1885
  1195  0077D0  0A01               	xorlw	1	; case 3
  1196  0077D2  B4D8               	btfsc	status,2,c
  1197  0077D4  D7E4               	goto	l1887
  1198  0077D6  0A07               	xorlw	7	; case 4
  1199  0077D8  B4D8               	btfsc	status,2,c
  1200  0077DA  D7E3               	goto	l1889
  1201  0077DC  0A0C               	xorlw	12	; case 8
  1202  0077DE  B4D8               	btfsc	status,2,c
  1203  0077E0  D7E2               	goto	l1891
  1204  0077E2  0A01               	xorlw	1	; case 9
  1205  0077E4  B4D8               	btfsc	status,2,c
  1206  0077E6  D7E1               	goto	l1893
  1207  0077E8  0A03               	xorlw	3	; case 10
  1208  0077EA  B4D8               	btfsc	status,2,c
  1209  0077EC  D7E0               	goto	l1895
  1210  0077EE  0A01               	xorlw	1	; case 11
  1211  0077F0  B4D8               	btfsc	status,2,c
  1212  0077F2  D7DF               	goto	l1897
  1213  0077F4  0A07               	xorlw	7	; case 12
  1214  0077F6  B4D8               	btfsc	status,2,c
  1215  0077F8  D7DE               	goto	l1899
  1216  0077FA                     l1905:
  1217                           
  1218                           ;SanUSB1X.h: 378: tempo_ms(10);
  1219  0077FA  0E00               	movlw	0
  1220  0077FC  6E11               	movwf	tempo_ms@i+1,c
  1221  0077FE  0E0A               	movlw	10
  1222  007800  6E10               	movwf	tempo_ms@i,c
  1223  007802  ECAD  F039         	call	_tempo_ms	;wreg free
  1224                           
  1225                           ;SanUSB1X.h: 379: ADCON2bits.ADFM=OSCCONbits.IRCF1;
  1226  007806  AAD3               	btfss	4051,5,c	;volatile
  1227  007808  D002               	bra	u295
  1228  00780A  8EC0               	bsf	4032,7,c	;volatile
  1229  00780C  D001               	bra	u297
  1230  00780E                     u295:
  1231  00780E  9EC0               	bcf	4032,7,c	;volatile
  1232  007810                     u297:
  1233                           
  1234                           ;SanUSB1X.h: 380: ADCON0bits.GO = OSCCONbits.IRCF1;
  1235  007810  AAD3               	btfss	4051,5,c	;volatile
  1236  007812  D002               	bra	u305
  1237  007814  82C2               	bsf	4034,1,c	;volatile
  1238  007816  D001               	bra	u307
  1239  007818                     u305:
  1240  007818  92C2               	bcf	4034,1,c	;volatile
  1241  00781A                     u307:
  1242  00781A                     l363:
  1243  00781A  B2C2               	btfsc	4034,1,c	;volatile
  1244  00781C  D7FE               	goto	l363
  1245                           
  1246                           ;SanUSB1X.h: 382: return ADRES; }
  1247  00781E  CFC3 F014          	movff	4035,?_le_AD10bits	;volatile
  1248  007822  CFC4 F015          	movff	4036,?_le_AD10bits+1	;volatile
  1249  007826  0012               	return	
  1250  007828                     __end_of_le_AD10bits:
  1251                           	opt stack 0
  1252                           tblptru	equ	0xFF8
  1253                           tblptrh	equ	0xFF7
  1254                           tblptrl	equ	0xFF6
  1255                           tablat	equ	0xFF5
  1256                           prodh	equ	0xFF4
  1257                           prodl	equ	0xFF3
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           postdec1	equ	0xFE5
  1261                           fsr1l	equ	0xFE1
  1262                           indf2	equ	0xFDF
  1263                           postinc2	equ	0xFDE
  1264                           postdec2	equ	0xFDD
  1265                           fsr2h	equ	0xFDA
  1266                           fsr2l	equ	0xFD9
  1267                           status	equ	0xFD8
  1268                           
  1269 ;; *************** function _tempo_ms *****************
  1270 ;; Defined at:
  1271 ;;		line 322 in file "SanUSB1X.h"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  i               2   15[COMRAM] unsigned int 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  k               2   17[COMRAM] unsigned int 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;		None               void
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1285 ;;      Params:         2       0       0       0       0       0       0       0       0
  1286 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1288 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1289 ;;Total ram usage:        4 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; Hardware stack levels required when called:    2
  1292 ;; This function calls:
  1293 ;;		_Delay1KTCYx
  1294 ;; This function is called by:
  1295 ;;		_le_AD10bits
  1296 ;;		_main
  1297 ;;		_le_AD8bits
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text4
  1302  00735A                     __ptext4:
  1303                           	opt stack 0
  1304  00735A                     _tempo_ms:
  1305                           	opt stack 28
  1306                           
  1307                           ;SanUSB1X.h: 324: EEADR =REG+0B11111100+OSCCONbits.IRCF1;
  1308                           
  1309                           ;incstack = 0
  1310  00735A  AAD3               	btfss	4051,5,c	;volatile
  1311  00735C  D002               	goto	u10
  1312  00735E  0E01               	movlw	1
  1313  007360  D001               	goto	u16
  1314  007362                     u10:
  1315  007362  0E00               	movlw	0
  1316  007364                     u16:
  1317  007364  2452               	addwf	_REG,w,c
  1318  007366  0FFC               	addlw	252
  1319  007368  6EA9               	movwf	4009,c	;volatile
  1320                           
  1321                           ;SanUSB1X.h: 325: EECON1=REG+EEADR & 0B00001011;
  1322  00736A  5052               	movf	_REG,w,c
  1323  00736C  24A9               	addwf	4009,w,c	;volatile
  1324  00736E  0B0B               	andlw	11
  1325  007370  6EA6               	movwf	4006,c	;volatile
  1326  007372                     l321:
  1327  007372  66A8               	tstfsz	4008,c	;volatile
  1328  007374  D7FE               	goto	l321
  1329                           
  1330                           ;SanUSB1X.h: 327: for(k=0;k<i;k++) { Delay1KTCYx(1);}
  1331  007376  0E00               	movlw	0
  1332  007378  6E13               	movwf	tempo_ms@k+1,c
  1333  00737A  0E00               	movlw	0
  1334  00737C  6E12               	movwf	tempo_ms@k,c
  1335  00737E  D005               	goto	l1599
  1336  007380                     l1595:
  1337  007380  0E01               	movlw	1
  1338  007382  EC72  F039         	call	_Delay1KTCYx
  1339  007386  4A12               	infsnz	tempo_ms@k,f,c
  1340  007388  2A13               	incf	tempo_ms@k+1,f,c
  1341  00738A                     l1599:
  1342  00738A  5010               	movf	tempo_ms@i,w,c
  1343  00738C  5C12               	subwf	tempo_ms@k,w,c
  1344  00738E  5011               	movf	tempo_ms@i+1,w,c
  1345  007390  5813               	subwfb	tempo_ms@k+1,w,c
  1346  007392  B0D8               	btfsc	status,0,c
  1347  007394  0012               	return	
  1348  007396  D7F4               	goto	l1595
  1349  007398                     __end_of_tempo_ms:
  1350                           	opt stack 0
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           prodh	equ	0xFF4
  1356                           prodl	equ	0xFF3
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           postdec1	equ	0xFE5
  1360                           fsr1l	equ	0xFE1
  1361                           indf2	equ	0xFDF
  1362                           postinc2	equ	0xFDE
  1363                           postdec2	equ	0xFDD
  1364                           fsr2h	equ	0xFDA
  1365                           fsr2l	equ	0xFD9
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function _lcd_ini *****************
  1369 ;; Defined at:
  1370 ;;		line 111 in file "lcd.h"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  data            1   24[COMRAM] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, prodl, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1386 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1387 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1388 ;;Total ram usage:        2 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    4
  1391 ;; This function calls:
  1392 ;;		_Delay_5500us
  1393 ;;		_Delay_5us
  1394 ;;		_Lcd_Cmd
  1395 ;;		___awdiv
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text5
  1402  0079DE                     __ptext5:
  1403                           	opt stack 0
  1404  0079DE                     _lcd_ini:
  1405                           	opt stack 26
  1406                           
  1407                           ;lcd.h: 112: unsigned char data;
  1408                           ;lcd.h: 113: TRISBbits.TRISB3 = 0; TRISBbits.TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBbits
      +                          .TRISB0 = 0; TRISBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  1409                           
  1410                           ;incstack = 0
  1411  0079DE  9693               	bcf	3987,3,c	;volatile
  1412  0079E0  9493               	bcf	3987,2,c	;volatile
  1413  0079E2  9293               	bcf	3987,1,c	;volatile
  1414  0079E4  9093               	bcf	3987,0,c	;volatile
  1415  0079E6  9893               	bcf	3987,4,c	;volatile
  1416  0079E8  9A93               	bcf	3987,5,c	;volatile
  1417                           
  1418                           ;lcd.h: 114: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 0; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1419  0079EA  968A               	bcf	3978,3,c	;volatile
  1420  0079EC  948A               	bcf	3978,2,c	;volatile
  1421  0079EE  928A               	bcf	3978,1,c	;volatile
  1422  0079F0  908A               	bcf	3978,0,c	;volatile
  1423  0079F2  988A               	bcf	3978,4,c	;volatile
  1424  0079F4  9A8A               	bcf	3978,5,c	;volatile
  1425                           
  1426                           ;lcd.h: 115: EEADR =0B11111101; EECON1bits.WREN = 0;
  1427  0079F6  0EFD               	movlw	253
  1428  0079F8  6EA9               	movwf	4009,c	;volatile
  1429  0079FA  94A6               	bcf	4006,2,c	;volatile
  1430                           
  1431                           ;lcd.h: 116: EECON1bits.EEPGD = 0; EECON1bits.CFGS = 0;
  1432  0079FC  9EA6               	bcf	4006,7,c	;volatile
  1433  0079FE  9CA6               	bcf	4006,6,c	;volatile
  1434                           
  1435                           ;lcd.h: 117: EECON1bits.RD = 1; while(EEDATA); s+=EEDATA;
  1436  007A00  80A6               	bsf	4006,0,c	;volatile
  1437  007A02                     l509:
  1438  007A02  66A8               	tstfsz	4008,c	;volatile
  1439  007A04  D7FE               	goto	l509
  1440  007A06  50A8               	movf	4008,w,c	;volatile
  1441  007A08  263B               	addwf	_s,f,c
  1442                           
  1443                           ;lcd.h: 118: EEADR-=EEADR; EECON1bits.WREN = 0;
  1444  007A0A  50A9               	movf	4009,w,c	;volatile
  1445  007A0C  5EA9               	subwf	4009,f,c	;volatile
  1446  007A0E  94A6               	bcf	4006,2,c	;volatile
  1447                           
  1448                           ;lcd.h: 119: EECON1bits.EEPGD = 0; EECON1bits.CFGS = 0;
  1449  007A10  9EA6               	bcf	4006,7,c	;volatile
  1450  007A12  9CA6               	bcf	4006,6,c	;volatile
  1451                           
  1452                           ;lcd.h: 120: EECON1bits.RD = 1;s=(s+EEDATA)/2;
  1453  007A14  80A6               	bsf	4006,0,c	;volatile
  1454  007A16  503B               	movf	_s,w,c
  1455  007A18  24A8               	addwf	4008,w,c	;volatile
  1456  007A1A  6E0F               	movwf	___awdiv@dividend,c
  1457  007A1C  6A10               	clrf	___awdiv@dividend+1,c
  1458  007A1E  3610               	rlcf	___awdiv@dividend+1,f,c
  1459  007A20  0E00               	movlw	0
  1460  007A22  6E12               	movwf	___awdiv@divisor+1,c
  1461  007A24  0E02               	movlw	2
  1462  007A26  6E11               	movwf	___awdiv@divisor,c
  1463  007A28  EC14  F03C         	call	___awdiv	;wreg free
  1464  007A2C  500F               	movf	?___awdiv,w,c
  1465  007A2E  6E3B               	movwf	_s,c
  1466                           
  1467                           ;lcd.h: 121: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1468  007A30  EC68  F039         	call	_Delay_5500us	;wreg free
  1469  007A34  EC68  F039         	call	_Delay_5500us	;wreg free
  1470  007A38  EC68  F039         	call	_Delay_5500us	;wreg free
  1471                           
  1472                           ;lcd.h: 122: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1473  007A3C  EC68  F039         	call	_Delay_5500us	;wreg free
  1474  007A40  EC68  F039         	call	_Delay_5500us	;wreg free
  1475  007A44  EC68  F039         	call	_Delay_5500us	;wreg free
  1476                           
  1477                           ;lcd.h: 123: for(data = 1; data < 4; data ++)
  1478  007A48  6E18               	movwf	??_lcd_ini& (0+255),c
  1479  007A4A  0E01               	movlw	1
  1480  007A4C  6E19               	movwf	lcd_ini@data,c
  1481  007A4E  5018               	movf	??_lcd_ini& (0+255),w,c
  1482  007A50  D017               	goto	L11
  1483  007A52                     l512:
  1484                           
  1485                           ;lcd.h: 124: {
  1486                           ;lcd.h: 125: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 1; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1487  007A52  968A               	bcf	3978,3,c	;volatile
  1488  007A54  948A               	bcf	3978,2,c	;volatile
  1489  007A56  828A               	bsf	3978,1,c	;volatile
  1490  007A58  808A               	bsf	3978,0,c	;volatile
  1491  007A5A  988A               	bcf	3978,4,c	;volatile
  1492  007A5C  9A8A               	bcf	3978,5,c	;volatile
  1493                           
  1494                           ;lcd.h: 126: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 1; LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  1495  007A5E  968A               	bcf	3978,3,c	;volatile
  1496  007A60  948A               	bcf	3978,2,c	;volatile
  1497  007A62  828A               	bsf	3978,1,c	;volatile
  1498  007A64  808A               	bsf	3978,0,c	;volatile
  1499  007A66  888A               	bsf	3978,4,c	;volatile
  1500  007A68  9A8A               	bcf	3978,5,c	;volatile
  1501                           
  1502                           ;lcd.h: 127: Delay_5us();
  1503  007A6A  EC70  F03A         	call	_Delay_5us	;wreg free
  1504                           
  1505                           ;lcd.h: 128: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 1; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1506  007A6E  968A               	bcf	3978,3,c	;volatile
  1507  007A70  948A               	bcf	3978,2,c	;volatile
  1508  007A72  828A               	bsf	3978,1,c	;volatile
  1509  007A74  808A               	bsf	3978,0,c	;volatile
  1510  007A76  988A               	bcf	3978,4,c	;volatile
  1511  007A78  9A8A               	bcf	3978,5,c	;volatile
  1512                           
  1513                           ;lcd.h: 129: Delay_5500us();
  1514  007A7A  EC68  F039         	call	_Delay_5500us	;wreg free
  1515  007A7E  2A19               	incf	lcd_ini@data,f,c
  1516  007A80                     L11:
  1517  007A80  0E03               	movlw	3
  1518  007A82  6419               	cpfsgt	lcd_ini@data,c
  1519  007A84  D7E6               	goto	l512
  1520                           
  1521                           ;lcd.h: 130: }
  1522                           ;lcd.h: 131: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1523  007A86  968A               	bcf	3978,3,c	;volatile
  1524  007A88  948A               	bcf	3978,2,c	;volatile
  1525  007A8A  828A               	bsf	3978,1,c	;volatile
  1526  007A8C  908A               	bcf	3978,0,c	;volatile
  1527  007A8E  988A               	bcf	3978,4,c	;volatile
  1528  007A90  9A8A               	bcf	3978,5,c	;volatile
  1529                           
  1530                           ;lcd.h: 132: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 1; LATBbits.LATB5 = 0;
  1531  007A92  968A               	bcf	3978,3,c	;volatile
  1532  007A94  948A               	bcf	3978,2,c	;volatile
  1533  007A96  828A               	bsf	3978,1,c	;volatile
  1534  007A98  908A               	bcf	3978,0,c	;volatile
  1535  007A9A  888A               	bsf	3978,4,c	;volatile
  1536  007A9C  9A8A               	bcf	3978,5,c	;volatile
  1537                           
  1538                           ;lcd.h: 133: Delay_5us();
  1539  007A9E  EC70  F03A         	call	_Delay_5us	;wreg free
  1540                           
  1541                           ;lcd.h: 134: LATBbits.LATB3 = 0; LATBbits.LATB2 = 0; LATBbits.LATB1 = 1; LATBbits.LATB0 
      +                          = 0; LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  1542  007AA2  968A               	bcf	3978,3,c	;volatile
  1543  007AA4  948A               	bcf	3978,2,c	;volatile
  1544  007AA6  828A               	bsf	3978,1,c	;volatile
  1545  007AA8  908A               	bcf	3978,0,c	;volatile
  1546  007AAA  988A               	bcf	3978,4,c	;volatile
  1547  007AAC  9A8A               	bcf	3978,5,c	;volatile
  1548                           
  1549                           ;lcd.h: 135: Delay_5500us();
  1550  007AAE  EC68  F039         	call	_Delay_5500us	;wreg free
  1551                           
  1552                           ;lcd.h: 136: data = 40; Lcd_Cmd(data);
  1553  007AB2  6E18               	movwf	??_lcd_ini& (0+255),c
  1554  007AB4  0E28               	movlw	40
  1555  007AB6  6E19               	movwf	lcd_ini@data,c
  1556  007AB8  5018               	movf	??_lcd_ini& (0+255),w,c
  1557  007ABA  5019               	movf	lcd_ini@data,w,c
  1558  007ABC  EC76  F03D         	call	_Lcd_Cmd
  1559                           
  1560                           ;lcd.h: 137: data = 16; Lcd_Cmd(data);
  1561  007AC0  6E18               	movwf	??_lcd_ini& (0+255),c
  1562  007AC2  0E10               	movlw	16
  1563  007AC4  6E19               	movwf	lcd_ini@data,c
  1564  007AC6  5018               	movf	??_lcd_ini& (0+255),w,c
  1565  007AC8  5019               	movf	lcd_ini@data,w,c
  1566  007ACA  EC76  F03D         	call	_Lcd_Cmd
  1567                           
  1568                           ;lcd.h: 138: data = 1; Lcd_Cmd(data);
  1569  007ACE  6E18               	movwf	??_lcd_ini& (0+255),c
  1570  007AD0  0E01               	movlw	1
  1571  007AD2  6E19               	movwf	lcd_ini@data,c
  1572  007AD4  5018               	movf	??_lcd_ini& (0+255),w,c
  1573  007AD6  5019               	movf	lcd_ini@data,w,c
  1574  007AD8  EC76  F03D         	call	_Lcd_Cmd
  1575                           
  1576                           ;lcd.h: 139: data = 15; Lcd_Cmd(data);
  1577  007ADC  6E18               	movwf	??_lcd_ini& (0+255),c
  1578  007ADE  0E0F               	movlw	15
  1579  007AE0  6E19               	movwf	lcd_ini@data,c
  1580  007AE2  5018               	movf	??_lcd_ini& (0+255),w,c
  1581  007AE4  5019               	movf	lcd_ini@data,w,c
  1582  007AE6  EC76  F03D         	call	_Lcd_Cmd
  1583  007AEA  0012               	return	
  1584  007AEC                     __end_of_lcd_ini:
  1585                           	opt stack 0
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           prodh	equ	0xFF4
  1591                           prodl	equ	0xFF3
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           postdec1	equ	0xFE5
  1595                           fsr1l	equ	0xFE1
  1596                           indf2	equ	0xFDF
  1597                           postinc2	equ	0xFDE
  1598                           postdec2	equ	0xFDD
  1599                           fsr2h	equ	0xFDA
  1600                           fsr2l	equ	0xFD9
  1601                           status	equ	0xFD8
  1602                           
  1603 ;; *************** function ___awdiv *****************
  1604 ;; Defined at:
  1605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awdiv.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  dividend        2   14[COMRAM] int 
  1608 ;;  divisor         2   16[COMRAM] int 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  quotient        2   21[COMRAM] int 
  1611 ;;  sign            1   20[COMRAM] unsigned char 
  1612 ;;  counter         1   19[COMRAM] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  2   14[COMRAM] int 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, prodl
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1622 ;;      Params:         4       0       0       0       0       0       0       0       0
  1623 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1624 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1625 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1626 ;;Total ram usage:        9 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_lcd_ini
  1633 ;;		_SetaPWM1
  1634 ;;		_SetaPWM2
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text6
  1639  007828                     __ptext6:
  1640                           	opt stack 0
  1641  007828                     ___awdiv:
  1642                           	opt stack 28
  1643                           
  1644                           ;incstack = 0
  1645  007828  6E13               	movwf	??___awdiv& (0+255),c
  1646  00782A  0E00               	movlw	0
  1647  00782C  6E15               	movwf	___awdiv@sign,c
  1648  00782E  5013               	movf	??___awdiv& (0+255),w,c
  1649  007830  5012               	movf	___awdiv@divisor+1,w,c
  1650  007832  0A80               	xorlw	128
  1651  007834  6EF3               	movwf	prodl,c
  1652  007836  0E80               	movlw	128
  1653  007838  5CF3               	subwf	prodl,w,c
  1654  00783A  0E00               	movlw	0
  1655  00783C  B4D8               	btfsc	status,2,c
  1656  00783E  5C11               	subwf	___awdiv@divisor,w,c
  1657  007840  B0D8               	btfsc	status,0,c
  1658  007842  D008               	goto	l1757
  1659  007844  6C11               	negf	___awdiv@divisor,c
  1660  007846  1E12               	comf	___awdiv@divisor+1,f,c
  1661  007848  B0D8               	btfsc	status,0,c
  1662  00784A  2A12               	incf	___awdiv@divisor+1,f,c
  1663  00784C  6E13               	movwf	??___awdiv& (0+255),c
  1664  00784E  0E01               	movlw	1
  1665  007850  6E15               	movwf	___awdiv@sign,c
  1666  007852  5013               	movf	??___awdiv& (0+255),w,c
  1667  007854                     l1757:
  1668  007854  5010               	movf	___awdiv@dividend+1,w,c
  1669  007856  0A80               	xorlw	128
  1670  007858  6EF3               	movwf	prodl,c
  1671  00785A  0E80               	movlw	128
  1672  00785C  5CF3               	subwf	prodl,w,c
  1673  00785E  0E00               	movlw	0
  1674  007860  B4D8               	btfsc	status,2,c
  1675  007862  5C0F               	subwf	___awdiv@dividend,w,c
  1676  007864  B0D8               	btfsc	status,0,c
  1677  007866  D006               	goto	l1763
  1678  007868  6C0F               	negf	___awdiv@dividend,c
  1679  00786A  1E10               	comf	___awdiv@dividend+1,f,c
  1680  00786C  B0D8               	btfsc	status,0,c
  1681  00786E  2A10               	incf	___awdiv@dividend+1,f,c
  1682  007870  0E01               	movlw	1
  1683  007872  1A15               	xorwf	___awdiv@sign,f,c
  1684  007874                     l1763:
  1685  007874  0E00               	movlw	0
  1686  007876  6E17               	movwf	___awdiv@quotient+1,c
  1687  007878  0E00               	movlw	0
  1688  00787A  6E16               	movwf	___awdiv@quotient,c
  1689  00787C  5012               	movf	___awdiv@divisor+1,w,c
  1690  00787E  1011               	iorwf	___awdiv@divisor,w,c
  1691  007880  B4D8               	btfsc	status,2,c
  1692  007882  D01E               	goto	l1785
  1693  007884  6E13               	movwf	??___awdiv& (0+255),c
  1694  007886  0E01               	movlw	1
  1695  007888  6E14               	movwf	___awdiv@counter,c
  1696  00788A  5013               	movf	??___awdiv& (0+255),w,c
  1697  00788C  D004               	goto	l1771
  1698  00788E                     l1769:
  1699  00788E  90D8               	bcf	status,0,c
  1700  007890  3611               	rlcf	___awdiv@divisor,f,c
  1701  007892  3612               	rlcf	___awdiv@divisor+1,f,c
  1702  007894  2A14               	incf	___awdiv@counter,f,c
  1703  007896                     l1771:
  1704  007896  AE12               	btfss	___awdiv@divisor+1,7,c
  1705  007898  D7FA               	goto	l1769
  1706  00789A                     l1773:
  1707  00789A  90D8               	bcf	status,0,c
  1708  00789C  3616               	rlcf	___awdiv@quotient,f,c
  1709  00789E  3617               	rlcf	___awdiv@quotient+1,f,c
  1710  0078A0  5011               	movf	___awdiv@divisor,w,c
  1711  0078A2  5C0F               	subwf	___awdiv@dividend,w,c
  1712  0078A4  5012               	movf	___awdiv@divisor+1,w,c
  1713  0078A6  5810               	subwfb	___awdiv@dividend+1,w,c
  1714  0078A8  A0D8               	btfss	status,0,c
  1715  0078AA  D005               	goto	l1781
  1716  0078AC  5011               	movf	___awdiv@divisor,w,c
  1717  0078AE  5E0F               	subwf	___awdiv@dividend,f,c
  1718  0078B0  5012               	movf	___awdiv@divisor+1,w,c
  1719  0078B2  5A10               	subwfb	___awdiv@dividend+1,f,c
  1720  0078B4  8016               	bsf	___awdiv@quotient,0,c
  1721  0078B6                     l1781:
  1722  0078B6  90D8               	bcf	status,0,c
  1723  0078B8  3212               	rrcf	___awdiv@divisor+1,f,c
  1724  0078BA  3211               	rrcf	___awdiv@divisor,f,c
  1725  0078BC  2E14               	decfsz	___awdiv@counter,f,c
  1726  0078BE  D7ED               	goto	l1773
  1727  0078C0                     l1785:
  1728  0078C0  5015               	movf	___awdiv@sign,w,c
  1729  0078C2  B4D8               	btfsc	status,2,c
  1730  0078C4  D004               	goto	l1789
  1731  0078C6  6C16               	negf	___awdiv@quotient,c
  1732  0078C8  1E17               	comf	___awdiv@quotient+1,f,c
  1733  0078CA  B0D8               	btfsc	status,0,c
  1734  0078CC  2A17               	incf	___awdiv@quotient+1,f,c
  1735  0078CE                     l1789:
  1736  0078CE  C016  F00F         	movff	___awdiv@quotient,?___awdiv
  1737  0078D2  C017  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  1738  0078D6  0012               	return	
  1739  0078D8                     __end_of___awdiv:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           indf2	equ	0xFDF
  1752                           postinc2	equ	0xFDE
  1753                           postdec2	equ	0xFDD
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _lcd_escreve2 *****************
  1759 ;; Defined at:
  1760 ;;		line 159 in file "lcd.h"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  y               1    wreg     unsigned char 
  1763 ;;  x               1   18[COMRAM] unsigned char 
  1764 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  1765 ;;		 -> buffer1(20), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  y               1   21[COMRAM] unsigned char 
  1768 ;;  data            1   22[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;		None               void
  1771 ;; Registers used:
  1772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         3       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        5 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    4
  1785 ;; This function calls:
  1786 ;;		_Lcd_Chr_CP
  1787 ;;		_Lcd_Cmd
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text7
  1794  00747C                     __ptext7:
  1795                           	opt stack 0
  1796  00747C                     _lcd_escreve2:
  1797                           	opt stack 26
  1798                           
  1799                           ;incstack = 0
  1800                           ;lcd_escreve2@y stored from wreg
  1801  00747C  CFE8 F016          	movff	wreg,lcd_escreve2@y
  1802                           
  1803                           ;lcd.h: 160: unsigned char data;
  1804                           ;lcd.h: 161: switch(y){
  1805  007480  D00D               	goto	l2059
  1806  007482                     l2049:
  1807  007482  5013               	movf	lcd_escreve2@x,w,c
  1808  007484  0F7F               	addlw	127
  1809  007486  D008               	goto	L14
  1810  007488                     l2051:
  1811  007488  5013               	movf	lcd_escreve2@x,w,c
  1812  00748A  0FBF               	addlw	191
  1813  00748C  D005               	goto	L14
  1814  00748E                     l2053:
  1815  00748E  5013               	movf	lcd_escreve2@x,w,c
  1816  007490  0F93               	addlw	147
  1817  007492  D002               	goto	L14
  1818  007494                     l2055:
  1819  007494  5013               	movf	lcd_escreve2@x,w,c
  1820  007496  0FD3               	addlw	211
  1821  007498                     L14:
  1822  007498  6E17               	movwf	lcd_escreve2@data,c
  1823  00749A  D00D               	goto	l2061
  1824  00749C                     l2059:
  1825  00749C  5016               	movf	lcd_escreve2@y,w,c
  1826                           
  1827                           ; Switch size 1, requested type "space"
  1828                           ; Number of cases is 4, Range of values is 1 to 4
  1829                           ; switch strategies available:
  1830                           ; Name         Instructions Cycles
  1831                           ; simple_byte           13     7 (average)
  1832                           ;	Chosen strategy is simple_byte
  1833  00749E  0A01               	xorlw	1	; case 1
  1834  0074A0  B4D8               	btfsc	status,2,c
  1835  0074A2  D7EF               	goto	l2049
  1836  0074A4  0A03               	xorlw	3	; case 2
  1837  0074A6  B4D8               	btfsc	status,2,c
  1838  0074A8  D7EF               	goto	l2051
  1839  0074AA  0A01               	xorlw	1	; case 3
  1840  0074AC  B4D8               	btfsc	status,2,c
  1841  0074AE  D7EF               	goto	l2053
  1842  0074B0  0A07               	xorlw	7	; case 4
  1843  0074B2  B4D8               	btfsc	status,2,c
  1844  0074B4  D7EF               	goto	l2055
  1845  0074B6                     l2061:
  1846                           
  1847                           ;lcd.h: 167: Lcd_Cmd(data);
  1848  0074B6  5017               	movf	lcd_escreve2@data,w,c
  1849  0074B8  EC76  F03D         	call	_Lcd_Cmd
  1850                           
  1851                           ;lcd.h: 168: while(*buffer)
  1852  0074BC  D009               	goto	l2067
  1853  0074BE                     l2063:
  1854                           
  1855                           ;lcd.h: 169: {
  1856                           ;lcd.h: 170: Lcd_Chr_CP(*buffer);
  1857  0074BE  C014  FFD9         	movff	lcd_escreve2@buffer,fsr2l
  1858  0074C2  C015  FFDA         	movff	lcd_escreve2@buffer+1,fsr2h
  1859  0074C6  50DF               	movf	indf2,w,c
  1860  0074C8  EC0A  F03E         	call	_Lcd_Chr_CP
  1861                           
  1862                           ;lcd.h: 171: buffer++;
  1863  0074CC  4A14               	infsnz	lcd_escreve2@buffer,f,c
  1864  0074CE  2A15               	incf	lcd_escreve2@buffer+1,f,c
  1865  0074D0                     l2067:
  1866  0074D0  C014  FFD9         	movff	lcd_escreve2@buffer,fsr2l
  1867  0074D4  C015  FFDA         	movff	lcd_escreve2@buffer+1,fsr2h
  1868  0074D8  50DF               	movf	indf2,w,c
  1869  0074DA  B4D8               	btfsc	status,2,c
  1870                           
  1871                           ;lcd.h: 172: }
  1872                           ;lcd.h: 173: return;
  1873  0074DC  0012               	return	
  1874  0074DE  D7EF               	goto	l2063
  1875  0074E0                     __end_of_lcd_escreve2:
  1876                           	opt stack 0
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           prodh	equ	0xFF4
  1882                           prodl	equ	0xFF3
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postdec1	equ	0xFE5
  1886                           fsr1l	equ	0xFE1
  1887                           indf2	equ	0xFDF
  1888                           postinc2	equ	0xFDE
  1889                           postdec2	equ	0xFDD
  1890                           fsr2h	equ	0xFDA
  1891                           fsr2l	equ	0xFD9
  1892                           status	equ	0xFD8
  1893                           
  1894 ;; *************** function _lcd_escreve *****************
  1895 ;; Defined at:
  1896 ;;		line 142 in file "lcd.h"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  y               1    wreg     unsigned char 
  1899 ;;  x               1   18[COMRAM] unsigned char 
  1900 ;;  buffer          2   19[COMRAM] PTR const unsigned char 
  1901 ;;		 -> STR_2(9), STR_1(13), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  y               1   21[COMRAM] unsigned char 
  1904 ;;  data            1   22[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;		None               void
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1914 ;;      Params:         3       0       0       0       0       0       0       0       0
  1915 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1917 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1918 ;;Total ram usage:        5 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    4
  1921 ;; This function calls:
  1922 ;;		_Lcd_Chr_CP
  1923 ;;		_Lcd_Cmd
  1924 ;; This function is called by:
  1925 ;;		_main
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text8
  1930  0075AE                     __ptext8:
  1931                           	opt stack 0
  1932  0075AE                     _lcd_escreve:
  1933                           	opt stack 26
  1934                           
  1935                           ;incstack = 0
  1936                           ;lcd_escreve@y stored from wreg
  1937  0075AE  CFE8 F016          	movff	wreg,lcd_escreve@y
  1938                           
  1939                           ;lcd.h: 143: unsigned char data;
  1940                           ;lcd.h: 144: switch(y){
  1941  0075B2  D00D               	goto	l2037
  1942  0075B4                     l2027:
  1943  0075B4  5013               	movf	lcd_escreve@x,w,c
  1944  0075B6  0F7F               	addlw	127
  1945  0075B8  D008               	goto	L17
  1946  0075BA                     l2029:
  1947  0075BA  5013               	movf	lcd_escreve@x,w,c
  1948  0075BC  0FBF               	addlw	191
  1949  0075BE  D005               	goto	L17
  1950  0075C0                     l2031:
  1951  0075C0  5013               	movf	lcd_escreve@x,w,c
  1952  0075C2  0F93               	addlw	147
  1953  0075C4  D002               	goto	L17
  1954  0075C6                     l2033:
  1955  0075C6  5013               	movf	lcd_escreve@x,w,c
  1956  0075C8  0FD3               	addlw	211
  1957  0075CA                     L17:
  1958  0075CA  6E17               	movwf	lcd_escreve@data,c
  1959  0075CC  D00D               	goto	l2039
  1960  0075CE                     l2037:
  1961  0075CE  5016               	movf	lcd_escreve@y,w,c
  1962                           
  1963                           ; Switch size 1, requested type "space"
  1964                           ; Number of cases is 4, Range of values is 1 to 4
  1965                           ; switch strategies available:
  1966                           ; Name         Instructions Cycles
  1967                           ; simple_byte           13     7 (average)
  1968                           ;	Chosen strategy is simple_byte
  1969  0075D0  0A01               	xorlw	1	; case 1
  1970  0075D2  B4D8               	btfsc	status,2,c
  1971  0075D4  D7EF               	goto	l2027
  1972  0075D6  0A03               	xorlw	3	; case 2
  1973  0075D8  B4D8               	btfsc	status,2,c
  1974  0075DA  D7EF               	goto	l2029
  1975  0075DC  0A01               	xorlw	1	; case 3
  1976  0075DE  B4D8               	btfsc	status,2,c
  1977  0075E0  D7EF               	goto	l2031
  1978  0075E2  0A07               	xorlw	7	; case 4
  1979  0075E4  B4D8               	btfsc	status,2,c
  1980  0075E6  D7EF               	goto	l2033
  1981  0075E8                     l2039:
  1982                           
  1983                           ;lcd.h: 150: Lcd_Cmd(data);
  1984  0075E8  5017               	movf	lcd_escreve@data,w,c
  1985  0075EA  EC76  F03D         	call	_Lcd_Cmd
  1986                           
  1987                           ;lcd.h: 151: while(*buffer)
  1988  0075EE  D00A               	goto	l2045
  1989  0075F0                     l2041:
  1990                           
  1991                           ;lcd.h: 152: {
  1992                           ;lcd.h: 153: Lcd_Chr_CP(*buffer);
  1993  0075F0  C014  FFF6         	movff	lcd_escreve@buffer,tblptrl
  1994  0075F4  C015  FFF7         	movff	lcd_escreve@buffer+1,tblptrh
  1995  0075F8  0008               	tblrd		*
  1996  0075FA  50F5               	movf	tablat,w,c
  1997  0075FC  EC0A  F03E         	call	_Lcd_Chr_CP
  1998                           
  1999                           ;lcd.h: 154: buffer++;
  2000  007600  4A14               	infsnz	lcd_escreve@buffer,f,c
  2001  007602  2A15               	incf	lcd_escreve@buffer+1,f,c
  2002  007604                     l2045:
  2003  007604  C014  FFF6         	movff	lcd_escreve@buffer,tblptrl
  2004  007608  C015  FFF7         	movff	lcd_escreve@buffer+1,tblptrh
  2005  00760C  0008               	tblrd		*
  2006  00760E  50F5               	movf	tablat,w,c
  2007  007610  0900               	iorlw	0
  2008  007612  B4D8               	btfsc	status,2,c
  2009                           
  2010                           ;lcd.h: 155: }
  2011                           ;lcd.h: 156: return;
  2012  007614  0012               	return	
  2013  007616  D7EC               	goto	l2041
  2014  007618                     __end_of_lcd_escreve:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           tblptrh	equ	0xFF7
  2018                           tblptrl	equ	0xFF6
  2019                           tablat	equ	0xFF5
  2020                           prodh	equ	0xFF4
  2021                           prodl	equ	0xFF3
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           fsr1l	equ	0xFE1
  2026                           indf2	equ	0xFDF
  2027                           postinc2	equ	0xFDE
  2028                           postdec2	equ	0xFDD
  2029                           fsr2h	equ	0xFDA
  2030                           fsr2l	equ	0xFD9
  2031                           status	equ	0xFD8
  2032                           
  2033 ;; *************** function _inverte_saida *****************
  2034 ;; Defined at:
  2035 ;;		line 253 in file "SanUSB1X.h"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  pino            2   14[COMRAM] unsigned int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2049 ;;      Params:         2       0       0       0       0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2051 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2052 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text9
  2064  007D40                     __ptext9:
  2065                           	opt stack 0
  2066  007D40                     _inverte_saida:
  2067                           	opt stack 29
  2068                           
  2069                           ;SanUSB1X.h: 255: switch(pino){
  2070                           
  2071                           ;incstack = 0
  2072  007D40  D051               	goto	l1871
  2073  007D42                     l260:
  2074  007D42  9092               	bcf	3986,0,c	;volatile
  2075  007D44  7080               	btg	3968,0,c	;volatile
  2076  007D46  D0A8               	goto	l288
  2077  007D48                     l262:
  2078  007D48  9292               	bcf	3986,1,c	;volatile
  2079  007D4A  7280               	btg	3968,1,c	;volatile
  2080  007D4C  D0A5               	goto	l288
  2081  007D4E                     l263:
  2082  007D4E  9492               	bcf	3986,2,c	;volatile
  2083  007D50  7480               	btg	3968,2,c	;volatile
  2084  007D52  D0A2               	goto	l288
  2085  007D54                     l264:
  2086  007D54  9692               	bcf	3986,3,c	;volatile
  2087  007D56  7680               	btg	3968,3,c	;volatile
  2088  007D58  D09F               	goto	l288
  2089  007D5A                     l265:
  2090  007D5A  9892               	bcf	3986,4,c	;volatile
  2091  007D5C  7880               	btg	3968,4,c	;volatile
  2092  007D5E  D09C               	goto	l288
  2093  007D60                     l266:
  2094  007D60  9A92               	bcf	3986,5,c	;volatile
  2095  007D62  7A80               	btg	3968,5,c	;volatile
  2096  007D64  D099               	goto	l288
  2097  007D66                     l267:
  2098  007D66  9093               	bcf	3987,0,c	;volatile
  2099  007D68  7081               	btg	3969,0,c	;volatile
  2100  007D6A  D096               	goto	l288
  2101  007D6C                     l268:
  2102  007D6C  9293               	bcf	3987,1,c	;volatile
  2103  007D6E  7281               	btg	3969,1,c	;volatile
  2104  007D70  D093               	goto	l288
  2105  007D72                     l269:
  2106  007D72  9493               	bcf	3987,2,c	;volatile
  2107  007D74  7481               	btg	3969,2,c	;volatile
  2108  007D76  D090               	goto	l288
  2109  007D78                     l270:
  2110  007D78  9693               	bcf	3987,3,c	;volatile
  2111  007D7A  7681               	btg	3969,3,c	;volatile
  2112  007D7C  D08D               	goto	l288
  2113  007D7E                     l271:
  2114  007D7E  9893               	bcf	3987,4,c	;volatile
  2115  007D80  7881               	btg	3969,4,c	;volatile
  2116  007D82  D08A               	goto	l288
  2117  007D84                     l272:
  2118  007D84  9A93               	bcf	3987,5,c	;volatile
  2119  007D86  7A81               	btg	3969,5,c	;volatile
  2120  007D88  D087               	goto	l288
  2121  007D8A                     l273:
  2122  007D8A  9C93               	bcf	3987,6,c	;volatile
  2123  007D8C  7C81               	btg	3969,6,c	;volatile
  2124  007D8E  D084               	goto	l288
  2125  007D90                     l274:
  2126  007D90  9E93               	bcf	3987,7,c	;volatile
  2127  007D92  7E81               	btg	3969,7,c	;volatile
  2128  007D94  D081               	goto	l288
  2129  007D96                     l275:
  2130  007D96  9094               	bcf	3988,0,c	;volatile
  2131  007D98  7082               	btg	3970,0,c	;volatile
  2132  007D9A  D07E               	goto	l288
  2133  007D9C                     l276:
  2134  007D9C  9294               	bcf	3988,1,c	;volatile
  2135  007D9E  7282               	btg	3970,1,c	;volatile
  2136  007DA0  D07B               	goto	l288
  2137  007DA2                     l277:
  2138  007DA2  9494               	bcf	3988,2,c	;volatile
  2139  007DA4  7482               	btg	3970,2,c	;volatile
  2140  007DA6  D078               	goto	l288
  2141  007DA8                     l278:
  2142  007DA8  9C94               	bcf	3988,6,c	;volatile
  2143  007DAA  7C82               	btg	3970,6,c	;volatile
  2144  007DAC  D075               	goto	l288
  2145  007DAE                     l279:
  2146  007DAE  9E94               	bcf	3988,7,c	;volatile
  2147  007DB0  7E82               	btg	3970,7,c	;volatile
  2148  007DB2  D072               	goto	l288
  2149  007DB4                     l280:
  2150  007DB4  9095               	bcf	3989,0,c	;volatile
  2151  007DB6  7083               	btg	3971,0,c	;volatile
  2152  007DB8  D06F               	goto	l288
  2153  007DBA                     l281:
  2154  007DBA  9295               	bcf	3989,1,c	;volatile
  2155  007DBC  7283               	btg	3971,1,c	;volatile
  2156  007DBE  D06C               	goto	l288
  2157  007DC0                     l282:
  2158  007DC0  9495               	bcf	3989,2,c	;volatile
  2159  007DC2  7483               	btg	3971,2,c	;volatile
  2160  007DC4  D069               	goto	l288
  2161  007DC6                     l283:
  2162  007DC6  9695               	bcf	3989,3,c	;volatile
  2163  007DC8  7683               	btg	3971,3,c	;volatile
  2164  007DCA  D066               	goto	l288
  2165  007DCC                     l284:
  2166  007DCC  9895               	bcf	3989,4,c	;volatile
  2167  007DCE  7883               	btg	3971,4,c	;volatile
  2168  007DD0  D063               	goto	l288
  2169  007DD2                     l285:
  2170  007DD2  9A95               	bcf	3989,5,c	;volatile
  2171  007DD4  7A83               	btg	3971,5,c	;volatile
  2172  007DD6  D060               	goto	l288
  2173  007DD8                     l286:
  2174  007DD8  9C95               	bcf	3989,6,c	;volatile
  2175  007DDA  7C83               	btg	3971,6,c	;volatile
  2176  007DDC  D05D               	goto	l288
  2177  007DDE                     l287:
  2178  007DDE  9E95               	bcf	3989,7,c	;volatile
  2179  007DE0  7E83               	btg	3971,7,c	;volatile
  2180  007DE2  D05A               	goto	l288
  2181  007DE4                     l1871:
  2182  007DE4  C00F  F011         	movff	inverte_saida@pino,??_inverte_saida
  2183  007DE8  C010  F012         	movff	inverte_saida@pino+1,??_inverte_saida+1
  2184                           
  2185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2186                           ; Switch size 1, requested type "space"
  2187                           ; Number of cases is 1, Range of values is 124 to 124
  2188                           ; switch strategies available:
  2189                           ; Name         Instructions Cycles
  2190                           ; simple_byte            4     3 (average)
  2191                           ;	Chosen strategy is simple_byte
  2192  007DEC  5012               	movf	??_inverte_saida+1,w,c
  2193  007DEE  0A7C               	xorlw	124	; case 124
  2194  007DF0  A4D8               	btfss	status,2,c
  2195  007DF2  D052               	goto	l288
  2196                           
  2197                           ; Switch size 1, requested type "space"
  2198                           ; Number of cases is 27, Range of values is 0 to 31
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte           82    42 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203  007DF4  5011               	movf	??_inverte_saida,w,c
  2204  007DF6  0A00               	xorlw	0	; case 0
  2205  007DF8  B4D8               	btfsc	status,2,c
  2206  007DFA  D7A3               	goto	l260
  2207  007DFC  0A01               	xorlw	1	; case 1
  2208  007DFE  B4D8               	btfsc	status,2,c
  2209  007E00  D7A3               	goto	l262
  2210  007E02  0A03               	xorlw	3	; case 2
  2211  007E04  B4D8               	btfsc	status,2,c
  2212  007E06  D7A3               	goto	l263
  2213  007E08  0A01               	xorlw	1	; case 3
  2214  007E0A  B4D8               	btfsc	status,2,c
  2215  007E0C  D7A3               	goto	l264
  2216  007E0E  0A07               	xorlw	7	; case 4
  2217  007E10  B4D8               	btfsc	status,2,c
  2218  007E12  D7A3               	goto	l265
  2219  007E14  0A01               	xorlw	1	; case 5
  2220  007E16  B4D8               	btfsc	status,2,c
  2221  007E18  D7A3               	goto	l266
  2222  007E1A  0A0D               	xorlw	13	; case 8
  2223  007E1C  B4D8               	btfsc	status,2,c
  2224  007E1E  D7A3               	goto	l267
  2225  007E20  0A01               	xorlw	1	; case 9
  2226  007E22  B4D8               	btfsc	status,2,c
  2227  007E24  D7A3               	goto	l268
  2228  007E26  0A03               	xorlw	3	; case 10
  2229  007E28  B4D8               	btfsc	status,2,c
  2230  007E2A  D7A3               	goto	l269
  2231  007E2C  0A01               	xorlw	1	; case 11
  2232  007E2E  B4D8               	btfsc	status,2,c
  2233  007E30  D7A3               	goto	l270
  2234  007E32  0A07               	xorlw	7	; case 12
  2235  007E34  B4D8               	btfsc	status,2,c
  2236  007E36  D7A3               	goto	l271
  2237  007E38  0A01               	xorlw	1	; case 13
  2238  007E3A  B4D8               	btfsc	status,2,c
  2239  007E3C  D7A3               	goto	l272
  2240  007E3E  0A03               	xorlw	3	; case 14
  2241  007E40  B4D8               	btfsc	status,2,c
  2242  007E42  D7A3               	goto	l273
  2243  007E44  0A01               	xorlw	1	; case 15
  2244  007E46  B4D8               	btfsc	status,2,c
  2245  007E48  D7A3               	goto	l274
  2246  007E4A  0A1F               	xorlw	31	; case 16
  2247  007E4C  B4D8               	btfsc	status,2,c
  2248  007E4E  D7A3               	goto	l275
  2249  007E50  0A01               	xorlw	1	; case 17
  2250  007E52  B4D8               	btfsc	status,2,c
  2251  007E54  D7A3               	goto	l276
  2252  007E56  0A03               	xorlw	3	; case 18
  2253  007E58  B4D8               	btfsc	status,2,c
  2254  007E5A  D7A3               	goto	l277
  2255  007E5C  0A04               	xorlw	4	; case 22
  2256  007E5E  B4D8               	btfsc	status,2,c
  2257  007E60  D7A3               	goto	l278
  2258  007E62  0A01               	xorlw	1	; case 23
  2259  007E64  B4D8               	btfsc	status,2,c
  2260  007E66  D7A3               	goto	l279
  2261  007E68  0A0F               	xorlw	15	; case 24
  2262  007E6A  B4D8               	btfsc	status,2,c
  2263  007E6C  D7A3               	goto	l280
  2264  007E6E  0A01               	xorlw	1	; case 25
  2265  007E70  B4D8               	btfsc	status,2,c
  2266  007E72  D7A3               	goto	l281
  2267  007E74  0A03               	xorlw	3	; case 26
  2268  007E76  B4D8               	btfsc	status,2,c
  2269  007E78  D7A3               	goto	l282
  2270  007E7A  0A01               	xorlw	1	; case 27
  2271  007E7C  B4D8               	btfsc	status,2,c
  2272  007E7E  D7A3               	goto	l283
  2273  007E80  0A07               	xorlw	7	; case 28
  2274  007E82  B4D8               	btfsc	status,2,c
  2275  007E84  D7A3               	goto	l284
  2276  007E86  0A01               	xorlw	1	; case 29
  2277  007E88  B4D8               	btfsc	status,2,c
  2278  007E8A  D7A3               	goto	l285
  2279  007E8C  0A03               	xorlw	3	; case 30
  2280  007E8E  B4D8               	btfsc	status,2,c
  2281  007E90  D7A3               	goto	l286
  2282  007E92  0A01               	xorlw	1	; case 31
  2283  007E94  B4D8               	btfsc	status,2,c
  2284  007E96  D7A3               	goto	l287
  2285  007E98                     l288:
  2286  007E98  0012               	return	
  2287  007E9A                     __end_of_inverte_saida:
  2288                           	opt stack 0
  2289                           tblptru	equ	0xFF8
  2290                           tblptrh	equ	0xFF7
  2291                           tblptrl	equ	0xFF6
  2292                           tablat	equ	0xFF5
  2293                           prodh	equ	0xFF4
  2294                           prodl	equ	0xFF3
  2295                           postinc0	equ	0xFEE
  2296                           wreg	equ	0xFE8
  2297                           postdec1	equ	0xFE5
  2298                           fsr1l	equ	0xFE1
  2299                           indf2	equ	0xFDF
  2300                           postinc2	equ	0xFDE
  2301                           postdec2	equ	0xFDD
  2302                           fsr2h	equ	0xFDA
  2303                           fsr2l	equ	0xFD9
  2304                           status	equ	0xFD8
  2305                           
  2306 ;; *************** function _habilita_canal_AD *****************
  2307 ;; Defined at:
  2308 ;;		line 343 in file "SanUSB1X.h"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  canal           1    wreg     unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  canal           1   14[COMRAM] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;		None               void
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2322 ;;      Params:         0       0       0       0       0       0       0       0       0
  2323 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2325 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2326 ;;Total ram usage:        1 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text10
  2337  0072F6                     __ptext10:
  2338                           	opt stack 0
  2339  0072F6                     _habilita_canal_AD:
  2340                           	opt stack 29
  2341                           
  2342                           ;incstack = 0
  2343                           ;habilita_canal_AD@canal stored from wreg
  2344  0072F6  CFE8 F00F          	movff	wreg,habilita_canal_AD@canal
  2345                           
  2346                           ;SanUSB1X.h: 344: ADCON1 =REG+canal;
  2347  0072FA  5052               	movf	_REG,w,c
  2348  0072FC  240F               	addwf	habilita_canal_AD@canal,w,c
  2349  0072FE  6EC1               	movwf	4033,c	;volatile
  2350                           
  2351                           ;SanUSB1X.h: 345: ADCON2=REG+0b00000111;
  2352  007300  5052               	movf	_REG,w,c
  2353  007302  0F07               	addlw	7
  2354  007304  6EC0               	movwf	4032,c	;volatile
  2355  007306  0012               	return	
  2356  007308                     __end_of_habilita_canal_AD:
  2357                           	opt stack 0
  2358                           tblptru	equ	0xFF8
  2359                           tblptrh	equ	0xFF7
  2360                           tblptrl	equ	0xFF6
  2361                           tablat	equ	0xFF5
  2362                           prodh	equ	0xFF4
  2363                           prodl	equ	0xFF3
  2364                           postinc0	equ	0xFEE
  2365                           wreg	equ	0xFE8
  2366                           postdec1	equ	0xFE5
  2367                           fsr1l	equ	0xFE1
  2368                           indf2	equ	0xFDF
  2369                           postinc2	equ	0xFDE
  2370                           postdec2	equ	0xFDD
  2371                           fsr2h	equ	0xFDA
  2372                           fsr2l	equ	0xFD9
  2373                           status	equ	0xFD8
  2374                           
  2375 ;; *************** function _clock_int_4MHz *****************
  2376 ;; Defined at:
  2377 ;;		line 466 in file "SanUSB1X.h"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;		None               void
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, prodl, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2391 ;;      Params:         0       0       0       0       0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    2
  2398 ;; This function calls:
  2399 ;;		___awmod
  2400 ;;		___lwdiv
  2401 ;;		_le_eeprom
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text11
  2408  007684                     __ptext11:
  2409                           	opt stack 0
  2410  007684                     _clock_int_4MHz:
  2411                           	opt stack 28
  2412                           
  2413                           ;incstack = 0
  2414  007684  0EFD               	movlw	253	;# 
  2415  007686  6EA9               	movwf	4009,c	;# 
  2416  007688  9EA6               	bcf	4006,7,c	;# 
  2417  00768A  9CA6               	bcf	4006,6,c	;# 
  2418  00768C  80A6               	bsf	4006,0,c	;# 
  2419  00768E                     BLEIBEN:
  2420                           
  2421                           ;# 
  2422  00768E  B0A8               	btfsc	4008,0,c	;# 
  2423  007690  EF47  F03B         	goto	BLEIBEN	;# 
  2424                           
  2425                           ;SanUSB1X.h: 478: OSCCON=0B01100110;
  2426  007694  0E66               	movlw	102
  2427  007696  6ED3               	movwf	4051,c	;volatile
  2428  007698                     l428:
  2429  007698  A4D3               	btfss	4051,2,c	;volatile
  2430  00769A  D7FE               	goto	l428
  2431                           
  2432                           ;SanUSB1X.h: 481: EEADR = 0B11111101;
  2433  00769C  0EFD               	movlw	253
  2434  00769E  6EA9               	movwf	4009,c	;volatile
  2435                           
  2436                           ;SanUSB1X.h: 482: EECON1=EEADR & 0B00001011;
  2437  0076A0  50A9               	movf	4009,w,c	;volatile
  2438  0076A2  0B0B               	andlw	11
  2439  0076A4  6EA6               	movwf	4006,c	;volatile
  2440  0076A6                     l431:
  2441  0076A6  66A8               	tstfsz	4008,c	;volatile
  2442  0076A8  D7FE               	goto	l431
  2443                           
  2444                           ;SanUSB1X.h: 484: REGad=R/((EEADR%126)<<4);
  2445  0076AA  C050  F016         	movff	_R,___lwdiv@dividend
  2446  0076AE  C051  F017         	movff	_R+1,___lwdiv@dividend+1
  2447  0076B2  0E00               	movlw	0
  2448  0076B4  6E12               	movwf	___awmod@divisor+1,c
  2449  0076B6  0E7E               	movlw	126
  2450  0076B8  6E11               	movwf	___awmod@divisor,c
  2451  0076BA  CFA9 F00F          	movff	4009,___awmod@dividend	;volatile
  2452  0076BE  6A10               	clrf	___awmod@dividend+1,c
  2453  0076C0  EC78  F03B         	call	___awmod	;wreg free
  2454  0076C4  3A0F               	swapf	?___awmod,f,c
  2455  0076C6  3A10               	swapf	?___awmod+1,f,c
  2456  0076C8  0EF0               	movlw	240
  2457  0076CA  1610               	andwf	?___awmod+1,f,c
  2458  0076CC  500F               	movf	?___awmod,w,c
  2459  0076CE  0B0F               	andlw	15
  2460  0076D0  1210               	iorwf	?___awmod+1,f,c
  2461  0076D2  0EF0               	movlw	240
  2462  0076D4  160F               	andwf	?___awmod,f,c
  2463  0076D6  C00F  F018         	movff	?___awmod,___lwdiv@divisor
  2464  0076DA  C010  F019         	movff	?___awmod+1,___lwdiv@divisor+1
  2465  0076DE  EC13  F03A         	call	___lwdiv	;wreg free
  2466  0076E2  5016               	movf	?___lwdiv,w,c
  2467  0076E4  6E53               	movwf	_REGad,c
  2468                           
  2469                           ;SanUSB1X.h: 485: REG=le_eeprom(REGad);
  2470  0076E6  5053               	movf	_REGad,w,c
  2471  0076E8  EC84  F039         	call	_le_eeprom
  2472  0076EC  6E52               	movwf	_REG,c
  2473  0076EE  0012               	return	
  2474  0076F0                     __end_of_clock_int_4MHz:
  2475                           	opt stack 0
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           prodh	equ	0xFF4
  2481                           prodl	equ	0xFF3
  2482                           postinc0	equ	0xFEE
  2483                           wreg	equ	0xFE8
  2484                           postdec1	equ	0xFE5
  2485                           fsr1l	equ	0xFE1
  2486                           indf2	equ	0xFDF
  2487                           postinc2	equ	0xFDE
  2488                           postdec2	equ	0xFDD
  2489                           fsr2h	equ	0xFDA
  2490                           fsr2l	equ	0xFD9
  2491                           status	equ	0xFD8
  2492                           
  2493 ;; *************** function _le_eeprom *****************
  2494 ;; Defined at:
  2495 ;;		line 456 in file "SanUSB1X.h"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  endereco        1    wreg     unsigned char 
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;  endereco        1   14[COMRAM] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      unsigned char 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0
  2510 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2512 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2513 ;;Total ram usage:        1 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; Hardware stack levels required when called:    1
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_clock_int_4MHz
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text12
  2524  007308                     __ptext12:
  2525                           	opt stack 0
  2526  007308                     _le_eeprom:
  2527                           	opt stack 28
  2528                           
  2529                           ;incstack = 0
  2530                           ;le_eeprom@endereco stored from wreg
  2531  007308  CFE8 F00F          	movff	wreg,le_eeprom@endereco
  2532                           
  2533                           ;SanUSB1X.h: 458: EEADR = endereco;
  2534  00730C  C00F  FFA9         	movff	le_eeprom@endereco,4009	;volatile
  2535                           
  2536                           ;SanUSB1X.h: 459: EECON1bits.WREN = 0;
  2537  007310  94A6               	bcf	4006,2,c	;volatile
  2538                           
  2539                           ;SanUSB1X.h: 460: EECON1bits.EEPGD = 0;
  2540  007312  9EA6               	bcf	4006,7,c	;volatile
  2541                           
  2542                           ;SanUSB1X.h: 461: EECON1bits.CFGS = 0;
  2543  007314  9CA6               	bcf	4006,6,c	;volatile
  2544                           
  2545                           ;SanUSB1X.h: 462: EECON1bits.RD = OSCCONbits.IRCF1;
  2546  007316  AAD3               	btfss	4051,5,c	;volatile
  2547  007318  D002               	bra	u45
  2548  00731A  80A6               	bsf	4006,0,c	;volatile
  2549  00731C  D001               	bra	u47
  2550  00731E                     u45:
  2551  00731E  90A6               	bcf	4006,0,c	;volatile
  2552  007320                     u47:
  2553                           
  2554                           ;SanUSB1X.h: 463: return EEDATA;
  2555  007320  50A8               	movf	4008,w,c	;volatile
  2556  007322  0012               	return	
  2557  007324                     __end_of_le_eeprom:
  2558                           	opt stack 0
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           postinc0	equ	0xFEE
  2566                           wreg	equ	0xFE8
  2567                           postdec1	equ	0xFE5
  2568                           fsr1l	equ	0xFE1
  2569                           indf2	equ	0xFDF
  2570                           postinc2	equ	0xFDE
  2571                           postdec2	equ	0xFDD
  2572                           fsr2h	equ	0xFDA
  2573                           fsr2l	equ	0xFD9
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function ___lwdiv *****************
  2577 ;; Defined at:
  2578 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  dividend        2   21[COMRAM] unsigned int 
  2581 ;;  divisor         2   23[COMRAM] unsigned int 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  quotient        2   26[COMRAM] unsigned int 
  2584 ;;  counter         1   28[COMRAM] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  2   21[COMRAM] unsigned int 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2594 ;;      Params:         4       0       0       0       0       0       0       0       0
  2595 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2596 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2597 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2598 ;;Total ram usage:        8 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    1
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_clock_int_4MHz
  2605 ;;		_sprintf
  2606 ;;		_sendnum
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text13
  2611  007426                     __ptext13:
  2612                           	opt stack 0
  2613  007426                     ___lwdiv:
  2614                           	opt stack 28
  2615                           
  2616                           ;incstack = 0
  2617  007426  0E00               	movlw	0
  2618  007428  6E1C               	movwf	___lwdiv@quotient+1,c
  2619  00742A  0E00               	movlw	0
  2620  00742C  6E1B               	movwf	___lwdiv@quotient,c
  2621  00742E  5019               	movf	___lwdiv@divisor+1,w,c
  2622  007430  1018               	iorwf	___lwdiv@divisor,w,c
  2623  007432  B4D8               	btfsc	status,2,c
  2624  007434  D01E               	goto	l1119
  2625  007436  6E1A               	movwf	??___lwdiv& (0+255),c
  2626  007438  0E01               	movlw	1
  2627  00743A  6E1D               	movwf	___lwdiv@counter,c
  2628  00743C  501A               	movf	??___lwdiv& (0+255),w,c
  2629  00743E  D004               	goto	l1837
  2630  007440                     l1835:
  2631  007440  90D8               	bcf	status,0,c
  2632  007442  3618               	rlcf	___lwdiv@divisor,f,c
  2633  007444  3619               	rlcf	___lwdiv@divisor+1,f,c
  2634  007446  2A1D               	incf	___lwdiv@counter,f,c
  2635  007448                     l1837:
  2636  007448  AE19               	btfss	___lwdiv@divisor+1,7,c
  2637  00744A  D7FA               	goto	l1835
  2638  00744C                     l1839:
  2639  00744C  90D8               	bcf	status,0,c
  2640  00744E  361B               	rlcf	___lwdiv@quotient,f,c
  2641  007450  361C               	rlcf	___lwdiv@quotient+1,f,c
  2642  007452  5018               	movf	___lwdiv@divisor,w,c
  2643  007454  5C16               	subwf	___lwdiv@dividend,w,c
  2644  007456  5019               	movf	___lwdiv@divisor+1,w,c
  2645  007458  5817               	subwfb	___lwdiv@dividend+1,w,c
  2646  00745A  A0D8               	btfss	status,0,c
  2647  00745C  D005               	goto	l1847
  2648  00745E  5018               	movf	___lwdiv@divisor,w,c
  2649  007460  5E16               	subwf	___lwdiv@dividend,f,c
  2650  007462  5019               	movf	___lwdiv@divisor+1,w,c
  2651  007464  5A17               	subwfb	___lwdiv@dividend+1,f,c
  2652  007466  801B               	bsf	___lwdiv@quotient,0,c
  2653  007468                     l1847:
  2654  007468  90D8               	bcf	status,0,c
  2655  00746A  3219               	rrcf	___lwdiv@divisor+1,f,c
  2656  00746C  3218               	rrcf	___lwdiv@divisor,f,c
  2657  00746E  2E1D               	decfsz	___lwdiv@counter,f,c
  2658  007470  D7ED               	goto	l1839
  2659  007472                     l1119:
  2660  007472  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
  2661  007476  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2662  00747A  0012               	return	
  2663  00747C                     __end_of___lwdiv:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           postinc2	equ	0xFDE
  2677                           postdec2	equ	0xFDD
  2678                           fsr2h	equ	0xFDA
  2679                           fsr2l	equ	0xFD9
  2680                           status	equ	0xFD8
  2681                           
  2682 ;; *************** function ___awmod *****************
  2683 ;; Defined at:
  2684 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\common\awmod.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  dividend        2   14[COMRAM] int 
  2687 ;;  divisor         2   16[COMRAM] int 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  sign            1   20[COMRAM] unsigned char 
  2690 ;;  counter         1   19[COMRAM] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2   14[COMRAM] int 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0, prodl
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2700 ;;      Params:         4       0       0       0       0       0       0       0       0
  2701 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2702 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2703 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2704 ;;Total ram usage:        7 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_clock_int_4MHz
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text14
  2715  0076F0                     __ptext14:
  2716                           	opt stack 0
  2717  0076F0                     ___awmod:
  2718                           	opt stack 28
  2719                           
  2720                           ;incstack = 0
  2721  0076F0  6E13               	movwf	??___awmod& (0+255),c
  2722  0076F2  0E00               	movlw	0
  2723  0076F4  6E15               	movwf	___awmod@sign,c
  2724  0076F6  5013               	movf	??___awmod& (0+255),w,c
  2725  0076F8  5010               	movf	___awmod@dividend+1,w,c
  2726  0076FA  0A80               	xorlw	128
  2727  0076FC  6EF3               	movwf	prodl,c
  2728  0076FE  0E80               	movlw	128
  2729  007700  5CF3               	subwf	prodl,w,c
  2730  007702  0E00               	movlw	0
  2731  007704  B4D8               	btfsc	status,2,c
  2732  007706  5C0F               	subwf	___awmod@dividend,w,c
  2733  007708  B0D8               	btfsc	status,0,c
  2734  00770A  D008               	goto	l1801
  2735  00770C  6C0F               	negf	___awmod@dividend,c
  2736  00770E  1E10               	comf	___awmod@dividend+1,f,c
  2737  007710  B0D8               	btfsc	status,0,c
  2738  007712  2A10               	incf	___awmod@dividend+1,f,c
  2739  007714  6E13               	movwf	??___awmod& (0+255),c
  2740  007716  0E01               	movlw	1
  2741  007718  6E15               	movwf	___awmod@sign,c
  2742  00771A  5013               	movf	??___awmod& (0+255),w,c
  2743  00771C                     l1801:
  2744  00771C  5012               	movf	___awmod@divisor+1,w,c
  2745  00771E  0A80               	xorlw	128
  2746  007720  6EF3               	movwf	prodl,c
  2747  007722  0E80               	movlw	128
  2748  007724  5CF3               	subwf	prodl,w,c
  2749  007726  0E00               	movlw	0
  2750  007728  B4D8               	btfsc	status,2,c
  2751  00772A  5C11               	subwf	___awmod@divisor,w,c
  2752  00772C  B0D8               	btfsc	status,0,c
  2753  00772E  D004               	goto	l1805
  2754  007730  6C11               	negf	___awmod@divisor,c
  2755  007732  1E12               	comf	___awmod@divisor+1,f,c
  2756  007734  B0D8               	btfsc	status,0,c
  2757  007736  2A12               	incf	___awmod@divisor+1,f,c
  2758  007738                     l1805:
  2759  007738  5012               	movf	___awmod@divisor+1,w,c
  2760  00773A  1011               	iorwf	___awmod@divisor,w,c
  2761  00773C  B4D8               	btfsc	status,2,c
  2762  00773E  D01A               	goto	l1821
  2763  007740  6E13               	movwf	??___awmod& (0+255),c
  2764  007742  0E01               	movlw	1
  2765  007744  6E14               	movwf	___awmod@counter,c
  2766  007746  5013               	movf	??___awmod& (0+255),w,c
  2767  007748  D004               	goto	l1811
  2768  00774A                     l1809:
  2769  00774A  90D8               	bcf	status,0,c
  2770  00774C  3611               	rlcf	___awmod@divisor,f,c
  2771  00774E  3612               	rlcf	___awmod@divisor+1,f,c
  2772  007750  2A14               	incf	___awmod@counter,f,c
  2773  007752                     l1811:
  2774  007752  AE12               	btfss	___awmod@divisor+1,7,c
  2775  007754  D7FA               	goto	l1809
  2776  007756                     l1813:
  2777  007756  5011               	movf	___awmod@divisor,w,c
  2778  007758  5C0F               	subwf	___awmod@dividend,w,c
  2779  00775A  5012               	movf	___awmod@divisor+1,w,c
  2780  00775C  5810               	subwfb	___awmod@dividend+1,w,c
  2781  00775E  A0D8               	btfss	status,0,c
  2782  007760  D004               	goto	l1817
  2783  007762  5011               	movf	___awmod@divisor,w,c
  2784  007764  5E0F               	subwf	___awmod@dividend,f,c
  2785  007766  5012               	movf	___awmod@divisor+1,w,c
  2786  007768  5A10               	subwfb	___awmod@dividend+1,f,c
  2787  00776A                     l1817:
  2788  00776A  90D8               	bcf	status,0,c
  2789  00776C  3212               	rrcf	___awmod@divisor+1,f,c
  2790  00776E  3211               	rrcf	___awmod@divisor,f,c
  2791  007770  2E14               	decfsz	___awmod@counter,f,c
  2792  007772  D7F1               	goto	l1813
  2793  007774                     l1821:
  2794  007774  5015               	movf	___awmod@sign,w,c
  2795  007776  B4D8               	btfsc	status,2,c
  2796  007778  D004               	goto	l1825
  2797  00777A  6C0F               	negf	___awmod@dividend,c
  2798  00777C  1E10               	comf	___awmod@dividend+1,f,c
  2799  00777E  B0D8               	btfsc	status,0,c
  2800  007780  2A10               	incf	___awmod@dividend+1,f,c
  2801  007782                     l1825:
  2802  007782  C00F  F00F         	movff	___awmod@dividend,?___awmod
  2803  007786  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  2804  00778A  0012               	return	
  2805  00778C                     __end_of___awmod:
  2806                           	opt stack 0
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           prodh	equ	0xFF4
  2812                           prodl	equ	0xFF3
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           postdec1	equ	0xFE5
  2816                           fsr1l	equ	0xFE1
  2817                           indf2	equ	0xFDF
  2818                           postinc2	equ	0xFDE
  2819                           postdec2	equ	0xFDD
  2820                           fsr2h	equ	0xFDA
  2821                           fsr2l	equ	0xFD9
  2822                           status	equ	0xFD8
  2823                           
  2824 ;; *************** function _Lcd_Chr *****************
  2825 ;; Defined at:
  2826 ;;		line 176 in file "lcd.h"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  y               1    wreg     unsigned char 
  2829 ;;  x               1   18[COMRAM] unsigned char 
  2830 ;;  Chr             1   19[COMRAM] unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  y               1   20[COMRAM] unsigned char 
  2833 ;;  data            1   21[COMRAM] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         2       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2846 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        4 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    4
  2850 ;; This function calls:
  2851 ;;		_Lcd_Chr_CP
  2852 ;;		_Lcd_Cmd
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text15
  2859  0073DE                     __ptext15:
  2860                           	opt stack 0
  2861  0073DE                     _Lcd_Chr:
  2862                           	opt stack 26
  2863                           
  2864                           ;incstack = 0
  2865                           ;Lcd_Chr@y stored from wreg
  2866  0073DE  CFE8 F015          	movff	wreg,Lcd_Chr@y
  2867                           
  2868                           ;lcd.h: 177: unsigned char data;
  2869                           ;lcd.h: 178: switch(y){
  2870  0073E2  D00D               	goto	l2081
  2871  0073E4                     l2071:
  2872  0073E4  5013               	movf	Lcd_Chr@x,w,c
  2873  0073E6  0F7F               	addlw	127
  2874  0073E8  D008               	goto	L20
  2875  0073EA                     l2073:
  2876  0073EA  5013               	movf	Lcd_Chr@x,w,c
  2877  0073EC  0FBF               	addlw	191
  2878  0073EE  D005               	goto	L20
  2879  0073F0                     l2075:
  2880  0073F0  5013               	movf	Lcd_Chr@x,w,c
  2881  0073F2  0F93               	addlw	147
  2882  0073F4  D002               	goto	L20
  2883  0073F6                     l2077:
  2884  0073F6  5013               	movf	Lcd_Chr@x,w,c
  2885  0073F8  0FD3               	addlw	211
  2886  0073FA                     L20:
  2887  0073FA  6E16               	movwf	Lcd_Chr@data,c
  2888  0073FC  D00D               	goto	l2083
  2889  0073FE                     l2081:
  2890  0073FE  5015               	movf	Lcd_Chr@y,w,c
  2891                           
  2892                           ; Switch size 1, requested type "space"
  2893                           ; Number of cases is 4, Range of values is 1 to 4
  2894                           ; switch strategies available:
  2895                           ; Name         Instructions Cycles
  2896                           ; simple_byte           13     7 (average)
  2897                           ;	Chosen strategy is simple_byte
  2898  007400  0A01               	xorlw	1	; case 1
  2899  007402  B4D8               	btfsc	status,2,c
  2900  007404  D7EF               	goto	l2071
  2901  007406  0A03               	xorlw	3	; case 2
  2902  007408  B4D8               	btfsc	status,2,c
  2903  00740A  D7EF               	goto	l2073
  2904  00740C  0A01               	xorlw	1	; case 3
  2905  00740E  B4D8               	btfsc	status,2,c
  2906  007410  D7EF               	goto	l2075
  2907  007412  0A07               	xorlw	7	; case 4
  2908  007414  B4D8               	btfsc	status,2,c
  2909  007416  D7EF               	goto	l2077
  2910  007418                     l2083:
  2911                           
  2912                           ;lcd.h: 184: Lcd_Cmd(data);
  2913  007418  5016               	movf	Lcd_Chr@data,w,c
  2914  00741A  EC76  F03D         	call	_Lcd_Cmd
  2915                           
  2916                           ;lcd.h: 185: Lcd_Chr_CP(Chr);
  2917  00741E  5014               	movf	Lcd_Chr@Chr,w,c
  2918  007420  EC0A  F03E         	call	_Lcd_Chr_CP
  2919  007424  0012               	return	
  2920  007426                     __end_of_Lcd_Chr:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           prodh	equ	0xFF4
  2927                           prodl	equ	0xFF3
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           postdec1	equ	0xFE5
  2931                           fsr1l	equ	0xFE1
  2932                           indf2	equ	0xFDF
  2933                           postinc2	equ	0xFDE
  2934                           postdec2	equ	0xFDD
  2935                           fsr2h	equ	0xFDA
  2936                           fsr2l	equ	0xFD9
  2937                           status	equ	0xFD8
  2938                           
  2939 ;; *************** function _CGRAM_SanUSB *****************
  2940 ;; Defined at:
  2941 ;;		line 216 in file "lcd.h"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  location        1    wreg     unsigned char 
  2944 ;;  ptr             2   18[COMRAM] PTR unsigned char 
  2945 ;;		 -> sino(8), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  location        1   23[COMRAM] unsigned char 
  2948 ;;  j               1   25[COMRAM] unsigned char 
  2949 ;;  i               1   24[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;		None               void
  2952 ;; Registers used:
  2953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2959 ;;      Params:         2       0       0       0       0       0       0       0       0
  2960 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2961 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2962 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2963 ;;Total ram usage:        8 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    4
  2966 ;; This function calls:
  2967 ;;		_Lcd_Chr_CP
  2968 ;;		_Lcd_Cmd
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text16
  2975  007618                     __ptext16:
  2976                           	opt stack 0
  2977  007618                     _CGRAM_SanUSB:
  2978                           	opt stack 26
  2979                           
  2980                           ;incstack = 0
  2981                           ;CGRAM_SanUSB@location stored from wreg
  2982  007618  CFE8 F018          	movff	wreg,CGRAM_SanUSB@location
  2983                           
  2984                           ;lcd.h: 217: unsigned char i,j=(s+1)>>4;
  2985  00761C  503B               	movf	_s,w,c
  2986  00761E  6E15               	movwf	??_CGRAM_SanUSB& (0+255),c
  2987  007620  6A16               	clrf	(??_CGRAM_SanUSB+1)& (0+255),c
  2988  007622  0E01               	movlw	1
  2989  007624  2615               	addwf	??_CGRAM_SanUSB,f,c
  2990  007626  0E00               	movlw	0
  2991  007628  2216               	addwfc	??_CGRAM_SanUSB+1,f,c
  2992  00762A  0E04               	movlw	4
  2993  00762C  6E17               	movwf	(??_CGRAM_SanUSB+2)& (0+255),c
  2994  00762E                     u435:
  2995  00762E  3416               	rlcf	??_CGRAM_SanUSB+1,w,c
  2996  007630  3216               	rrcf	??_CGRAM_SanUSB+1,f,c
  2997  007632  3215               	rrcf	??_CGRAM_SanUSB,f,c
  2998  007634  2E17               	decfsz	(??_CGRAM_SanUSB+2)& (0+255),f,c
  2999  007636  D7FB               	goto	u435
  3000  007638  5015               	movf	??_CGRAM_SanUSB,w,c
  3001  00763A  6E1A               	movwf	CGRAM_SanUSB@j,c
  3002                           
  3003                           ;lcd.h: 218: if(location<j){
  3004  00763C  501A               	movf	CGRAM_SanUSB@j,w,c
  3005  00763E  5C18               	subwf	CGRAM_SanUSB@location,w,c
  3006  007640  B0D8               	btfsc	status,0,c
  3007  007642  D01F               	goto	l563
  3008                           
  3009                           ;lcd.h: 219: Lcd_Cmd(j*j+(location*j));
  3010  007644  5018               	movf	CGRAM_SanUSB@location,w,c
  3011  007646  021A               	mulwf	CGRAM_SanUSB@j,c
  3012  007648  CFF3 F015          	movff	prodl,??_CGRAM_SanUSB
  3013  00764C  501A               	movf	CGRAM_SanUSB@j,w,c
  3014  00764E  021A               	mulwf	CGRAM_SanUSB@j,c
  3015  007650  50F3               	movf	prodl,w,c
  3016  007652  2415               	addwf	??_CGRAM_SanUSB,w,c
  3017  007654  EC76  F03D         	call	_Lcd_Cmd
  3018                           
  3019                           ;lcd.h: 220: for(i=0;i<j;i++)
  3020  007658  6E15               	movwf	??_CGRAM_SanUSB& (0+255),c
  3021  00765A  0E00               	movlw	0
  3022  00765C  6E19               	movwf	CGRAM_SanUSB@i,c
  3023  00765E  5015               	movf	??_CGRAM_SanUSB& (0+255),w,c
  3024  007660  D00C               	goto	l2095
  3025  007662                     l2091:
  3026                           
  3027                           ;lcd.h: 221: Lcd_Chr_CP(ptr[ i ]);
  3028  007662  5019               	movf	CGRAM_SanUSB@i,w,c
  3029  007664  0D01               	mullw	1
  3030  007666  50F3               	movf	prodl,w,c
  3031  007668  2413               	addwf	CGRAM_SanUSB@ptr,w,c
  3032  00766A  6ED9               	movwf	fsr2l,c
  3033  00766C  50F4               	movf	prodh,w,c
  3034  00766E  2014               	addwfc	CGRAM_SanUSB@ptr+1,w,c
  3035  007670  6EDA               	movwf	fsr2h,c
  3036  007672  50DF               	movf	indf2,w,c
  3037  007674  EC0A  F03E         	call	_Lcd_Chr_CP
  3038  007678  2A19               	incf	CGRAM_SanUSB@i,f,c
  3039  00767A                     l2095:
  3040  00767A  501A               	movf	CGRAM_SanUSB@j,w,c
  3041  00767C  5C19               	subwf	CGRAM_SanUSB@i,w,c
  3042  00767E  A0D8               	btfss	status,0,c
  3043  007680  D7F0               	goto	l2091
  3044  007682                     l563:
  3045  007682  0012               	return	
  3046  007684                     __end_of_CGRAM_SanUSB:
  3047                           	opt stack 0
  3048                           tblptru	equ	0xFF8
  3049                           tblptrh	equ	0xFF7
  3050                           tblptrl	equ	0xFF6
  3051                           tablat	equ	0xFF5
  3052                           prodh	equ	0xFF4
  3053                           prodl	equ	0xFF3
  3054                           postinc0	equ	0xFEE
  3055                           wreg	equ	0xFE8
  3056                           postdec1	equ	0xFE5
  3057                           fsr1l	equ	0xFE1
  3058                           indf2	equ	0xFDF
  3059                           postinc2	equ	0xFDE
  3060                           postdec2	equ	0xFDD
  3061                           fsr2h	equ	0xFDA
  3062                           fsr2l	equ	0xFD9
  3063                           status	equ	0xFD8
  3064                           
  3065 ;; *************** function _Lcd_Cmd *****************
  3066 ;; Defined at:
  3067 ;;		line 202 in file "lcd.h"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  Cmd             1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  Cmd             1   17[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;		None               void
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        3 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    3
  3088 ;; This function calls:
  3089 ;;		_Delay_5500us
  3090 ;;		_Delay_5us
  3091 ;; This function is called by:
  3092 ;;		_lcd_ini
  3093 ;;		_lcd_escreve
  3094 ;;		_lcd_escreve2
  3095 ;;		_Lcd_Chr
  3096 ;;		_CGRAM_SanUSB
  3097 ;;		_main
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text17
  3102  007AEC                     __ptext17:
  3103                           	opt stack 0
  3104  007AEC                     _Lcd_Cmd:
  3105                           	opt stack 26
  3106                           
  3107                           ;incstack = 0
  3108                           ;Lcd_Cmd@Cmd stored from wreg
  3109  007AEC  CFE8 F012          	movff	wreg,Lcd_Cmd@Cmd
  3110                           
  3111                           ;lcd.h: 203: LATBbits.LATB4 = 0; LATBbits.LATB5 = 0;
  3112  007AF0  988A               	bcf	3978,4,c	;volatile
  3113  007AF2  9A8A               	bcf	3978,5,c	;volatile
  3114                           
  3115                           ;lcd.h: 204: LATBbits.LATB3 = (Cmd & 0b10000000)>>7; LATBbits.LATB2 = (Cmd & 0b01000000)
      +                          >>6;
  3116  007AF4  6A10               	clrf	??_Lcd_Cmd& (0+255),c
  3117  007AF6  AE12               	btfss	Lcd_Cmd@Cmd,7,c
  3118  007AF8  D001               	bra	u55
  3119  007AFA  2A10               	incf	??_Lcd_Cmd& (0+255),f,c
  3120  007AFC                     u55:
  3121  007AFC  0E01               	movlw	1
  3122  007AFE  1610               	andwf	??_Lcd_Cmd,f,c
  3123  007B00  4610               	rlncf	??_Lcd_Cmd,f,c
  3124  007B02  4610               	rlncf	??_Lcd_Cmd,f,c
  3125  007B04  4610               	rlncf	??_Lcd_Cmd,f,c
  3126  007B06  508A               	movf	3978,w,c	;volatile
  3127  007B08  1810               	xorwf	??_Lcd_Cmd,w,c
  3128  007B0A  0BF7               	andlw	-9
  3129  007B0C  1810               	xorwf	??_Lcd_Cmd,w,c
  3130  007B0E  6E8A               	movwf	3978,c	;volatile
  3131  007B10  C012  F010         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  3132  007B14  0E06               	movlw	6
  3133  007B16  6E11               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  3134  007B18                     u65:
  3135  007B18  90D8               	bcf	status,0,c
  3136  007B1A  3210               	rrcf	??_Lcd_Cmd,f,c
  3137  007B1C  2E11               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  3138  007B1E  D7FC               	goto	u65
  3139  007B20  0E01               	movlw	1
  3140  007B22  1610               	andwf	??_Lcd_Cmd,f,c
  3141  007B24  4610               	rlncf	??_Lcd_Cmd,f,c
  3142  007B26  4610               	rlncf	??_Lcd_Cmd,f,c
  3143  007B28  508A               	movf	3978,w,c	;volatile
  3144  007B2A  1810               	xorwf	??_Lcd_Cmd,w,c
  3145  007B2C  0BFB               	andlw	-5
  3146  007B2E  1810               	xorwf	??_Lcd_Cmd,w,c
  3147  007B30  6E8A               	movwf	3978,c	;volatile
  3148                           
  3149                           ;lcd.h: 205: LATBbits.LATB1 = (Cmd & 0b00100000)>>5; LATBbits.LATB0 = (Cmd & 0b00010000)
      +                          >>4;
  3150  007B32  C012  F010         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  3151  007B36  0E05               	movlw	5
  3152  007B38  6E11               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  3153  007B3A                     u75:
  3154  007B3A  90D8               	bcf	status,0,c
  3155  007B3C  3210               	rrcf	??_Lcd_Cmd,f,c
  3156  007B3E  2E11               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  3157  007B40  D7FC               	goto	u75
  3158  007B42  0E01               	movlw	1
  3159  007B44  1610               	andwf	??_Lcd_Cmd,f,c
  3160  007B46  4610               	rlncf	??_Lcd_Cmd,f,c
  3161  007B48  508A               	movf	3978,w,c	;volatile
  3162  007B4A  1810               	xorwf	??_Lcd_Cmd,w,c
  3163  007B4C  0BFD               	andlw	-3
  3164  007B4E  1810               	xorwf	??_Lcd_Cmd,w,c
  3165  007B50  6E8A               	movwf	3978,c	;volatile
  3166  007B52  C012  F010         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  3167  007B56  3A10               	swapf	??_Lcd_Cmd,f,c
  3168  007B58  0E0F               	movlw	15
  3169  007B5A  1610               	andwf	??_Lcd_Cmd,f,c
  3170  007B5C  0E01               	movlw	1
  3171  007B5E  1610               	andwf	??_Lcd_Cmd,f,c
  3172  007B60  508A               	movf	3978,w,c	;volatile
  3173  007B62  1810               	xorwf	??_Lcd_Cmd,w,c
  3174  007B64  0BFE               	andlw	-2
  3175  007B66  1810               	xorwf	??_Lcd_Cmd,w,c
  3176  007B68  6E8A               	movwf	3978,c	;volatile
  3177                           
  3178                           ;lcd.h: 206: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  3179  007B6A  F000               	nop	
  3180  007B6C  F000               	nop	
  3181  007B6E  F000               	nop	
  3182  007B70  F000               	nop	
  3183  007B72  F000               	nop	
  3184  007B74  F000               	nop	
  3185  007B76  F000               	nop	
  3186  007B78  F000               	nop	
  3187  007B7A  F000               	nop	
  3188  007B7C  F000               	nop	
  3189                           
  3190                           ;lcd.h: 207: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  3191  007B7E  888A               	bsf	3978,4,c	;volatile
  3192  007B80  EC70  F03A         	call	_Delay_5us	;wreg free
  3193  007B84  988A               	bcf	3978,4,c	;volatile
  3194                           
  3195                           ;lcd.h: 209: LATBbits.LATB3 = (Cmd & 0b00001000)>>3; LATBbits.LATB2 = (Cmd & 0b00000100)
      +                          >>2;
  3196  007B86  C012  F010         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  3197  007B8A  90D8               	bcf	status,0,c
  3198  007B8C  3210               	rrcf	??_Lcd_Cmd,f,c
  3199  007B8E  90D8               	bcf	status,0,c
  3200  007B90  3210               	rrcf	??_Lcd_Cmd,f,c
  3201  007B92  90D8               	bcf	status,0,c
  3202  007B94  3210               	rrcf	??_Lcd_Cmd,f,c
  3203  007B96  0E01               	movlw	1
  3204  007B98  1610               	andwf	??_Lcd_Cmd,f,c
  3205  007B9A  4610               	rlncf	??_Lcd_Cmd,f,c
  3206  007B9C  4610               	rlncf	??_Lcd_Cmd,f,c
  3207  007B9E  4610               	rlncf	??_Lcd_Cmd,f,c
  3208  007BA0  508A               	movf	3978,w,c	;volatile
  3209  007BA2  1810               	xorwf	??_Lcd_Cmd,w,c
  3210  007BA4  0BF7               	andlw	-9
  3211  007BA6  1810               	xorwf	??_Lcd_Cmd,w,c
  3212  007BA8  6E8A               	movwf	3978,c	;volatile
  3213  007BAA  C012  F010         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  3214  007BAE  90D8               	bcf	status,0,c
  3215  007BB0  3210               	rrcf	??_Lcd_Cmd,f,c
  3216  007BB2  90D8               	bcf	status,0,c
  3217  007BB4  3210               	rrcf	??_Lcd_Cmd,f,c
  3218  007BB6  0E01               	movlw	1
  3219  007BB8  1610               	andwf	??_Lcd_Cmd,f,c
  3220  007BBA  4610               	rlncf	??_Lcd_Cmd,f,c
  3221  007BBC  4610               	rlncf	??_Lcd_Cmd,f,c
  3222  007BBE  508A               	movf	3978,w,c	;volatile
  3223  007BC0  1810               	xorwf	??_Lcd_Cmd,w,c
  3224  007BC2  0BFB               	andlw	-5
  3225  007BC4  1810               	xorwf	??_Lcd_Cmd,w,c
  3226  007BC6  6E8A               	movwf	3978,c	;volatile
  3227                           
  3228                           ;lcd.h: 210: LATBbits.LATB1 = (Cmd & 0b00000010)>>1; LATBbits.LATB0 = (Cmd & 0b00000001);
  3229  007BC8  C012  F010         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  3230  007BCC  90D8               	bcf	status,0,c
  3231  007BCE  3210               	rrcf	??_Lcd_Cmd,f,c
  3232  007BD0  0E01               	movlw	1
  3233  007BD2  1610               	andwf	??_Lcd_Cmd,f,c
  3234  007BD4  4610               	rlncf	??_Lcd_Cmd,f,c
  3235  007BD6  508A               	movf	3978,w,c	;volatile
  3236  007BD8  1810               	xorwf	??_Lcd_Cmd,w,c
  3237  007BDA  0BFD               	andlw	-3
  3238  007BDC  1810               	xorwf	??_Lcd_Cmd,w,c
  3239  007BDE  6E8A               	movwf	3978,c	;volatile
  3240  007BE0  C012  F010         	movff	Lcd_Cmd@Cmd,??_Lcd_Cmd
  3241  007BE4  0E01               	movlw	1
  3242  007BE6  1610               	andwf	??_Lcd_Cmd,f,c
  3243  007BE8  508A               	movf	3978,w,c	;volatile
  3244  007BEA  1810               	xorwf	??_Lcd_Cmd,w,c
  3245  007BEC  0BFE               	andlw	-2
  3246  007BEE  1810               	xorwf	??_Lcd_Cmd,w,c
  3247  007BF0  6E8A               	movwf	3978,c	;volatile
  3248                           
  3249                           ;lcd.h: 211: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  3250  007BF2  F000               	nop	
  3251  007BF4  F000               	nop	
  3252  007BF6  F000               	nop	
  3253  007BF8  F000               	nop	
  3254  007BFA  F000               	nop	
  3255  007BFC  F000               	nop	
  3256  007BFE  F000               	nop	
  3257  007C00  F000               	nop	
  3258  007C02  F000               	nop	
  3259  007C04  F000               	nop	
  3260                           
  3261                           ;lcd.h: 212: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  3262  007C06  888A               	bsf	3978,4,c	;volatile
  3263  007C08  EC70  F03A         	call	_Delay_5us	;wreg free
  3264  007C0C  988A               	bcf	3978,4,c	;volatile
  3265                           
  3266                           ;lcd.h: 213: Delay_5500us();
  3267  007C0E  EC68  F039         	call	_Delay_5500us	;wreg free
  3268  007C12  0012               	return	
  3269  007C14                     __end_of_Lcd_Cmd:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           postdec1	equ	0xFE5
  3280                           fsr1l	equ	0xFE1
  3281                           indf2	equ	0xFDF
  3282                           postinc2	equ	0xFDE
  3283                           postdec2	equ	0xFDD
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8
  3287                           
  3288 ;; *************** function _Lcd_Chr_CP *****************
  3289 ;; Defined at:
  3290 ;;		line 188 in file "lcd.h"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  Chr_CP          1    wreg     unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  Chr_CP          1   17[COMRAM] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;		None               void
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3304 ;;      Params:         0       0       0       0       0       0       0       0       0
  3305 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3306 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3307 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3308 ;;Total ram usage:        3 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    3
  3311 ;; This function calls:
  3312 ;;		_Delay_5500us
  3313 ;;		_Delay_5us
  3314 ;; This function is called by:
  3315 ;;		_lcd_escreve
  3316 ;;		_lcd_escreve2
  3317 ;;		_Lcd_Chr
  3318 ;;		_CGRAM_SanUSB
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text18
  3323  007C14                     __ptext18:
  3324                           	opt stack 0
  3325  007C14                     _Lcd_Chr_CP:
  3326                           	opt stack 26
  3327                           
  3328                           ;incstack = 0
  3329                           ;Lcd_Chr_CP@Chr_CP stored from wreg
  3330  007C14  CFE8 F012          	movff	wreg,Lcd_Chr_CP@Chr_CP
  3331                           
  3332                           ;lcd.h: 189: LATBbits.LATB4 = 0; LATBbits.LATB5 = 1;
  3333  007C18  988A               	bcf	3978,4,c	;volatile
  3334  007C1A  8A8A               	bsf	3978,5,c	;volatile
  3335                           
  3336                           ;lcd.h: 190: LATBbits.LATB3 = (Chr_CP & 0b10000000)>>7; LATBbits.LATB2 = (Chr_CP & 0b010
      +                          00000)>>6;
  3337  007C1C  6A10               	clrf	??_Lcd_Chr_CP& (0+255),c
  3338  007C1E  AE12               	btfss	Lcd_Chr_CP@Chr_CP,7,c
  3339  007C20  D001               	bra	u85
  3340  007C22  2A10               	incf	??_Lcd_Chr_CP& (0+255),f,c
  3341  007C24                     u85:
  3342  007C24  0E01               	movlw	1
  3343  007C26  1610               	andwf	??_Lcd_Chr_CP,f,c
  3344  007C28  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3345  007C2A  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3346  007C2C  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3347  007C2E  508A               	movf	3978,w,c	;volatile
  3348  007C30  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3349  007C32  0BF7               	andlw	-9
  3350  007C34  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3351  007C36  6E8A               	movwf	3978,c	;volatile
  3352  007C38  C012  F010         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  3353  007C3C  0E06               	movlw	6
  3354  007C3E  6E11               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  3355  007C40                     u95:
  3356  007C40  90D8               	bcf	status,0,c
  3357  007C42  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3358  007C44  2E11               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  3359  007C46  D7FC               	goto	u95
  3360  007C48  0E01               	movlw	1
  3361  007C4A  1610               	andwf	??_Lcd_Chr_CP,f,c
  3362  007C4C  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3363  007C4E  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3364  007C50  508A               	movf	3978,w,c	;volatile
  3365  007C52  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3366  007C54  0BFB               	andlw	-5
  3367  007C56  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3368  007C58  6E8A               	movwf	3978,c	;volatile
  3369                           
  3370                           ;lcd.h: 191: LATBbits.LATB1 = (Chr_CP & 0b00100000)>>5; LATBbits.LATB0 = (Chr_CP & 0b000
      +                          10000)>>4;
  3371  007C5A  C012  F010         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  3372  007C5E  0E05               	movlw	5
  3373  007C60  6E11               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  3374  007C62                     u105:
  3375  007C62  90D8               	bcf	status,0,c
  3376  007C64  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3377  007C66  2E11               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  3378  007C68  D7FC               	goto	u105
  3379  007C6A  0E01               	movlw	1
  3380  007C6C  1610               	andwf	??_Lcd_Chr_CP,f,c
  3381  007C6E  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3382  007C70  508A               	movf	3978,w,c	;volatile
  3383  007C72  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3384  007C74  0BFD               	andlw	-3
  3385  007C76  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3386  007C78  6E8A               	movwf	3978,c	;volatile
  3387  007C7A  C012  F010         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  3388  007C7E  3A10               	swapf	??_Lcd_Chr_CP,f,c
  3389  007C80  0E0F               	movlw	15
  3390  007C82  1610               	andwf	??_Lcd_Chr_CP,f,c
  3391  007C84  0E01               	movlw	1
  3392  007C86  1610               	andwf	??_Lcd_Chr_CP,f,c
  3393  007C88  508A               	movf	3978,w,c	;volatile
  3394  007C8A  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3395  007C8C  0BFE               	andlw	-2
  3396  007C8E  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3397  007C90  6E8A               	movwf	3978,c	;volatile
  3398                           
  3399                           ;lcd.h: 192: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  3400  007C92  F000               	nop	
  3401  007C94  F000               	nop	
  3402  007C96  F000               	nop	
  3403  007C98  F000               	nop	
  3404  007C9A  F000               	nop	
  3405  007C9C  F000               	nop	
  3406  007C9E  F000               	nop	
  3407  007CA0  F000               	nop	
  3408  007CA2  F000               	nop	
  3409  007CA4  F000               	nop	
  3410                           
  3411                           ;lcd.h: 193: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  3412  007CA6  888A               	bsf	3978,4,c	;volatile
  3413  007CA8  EC70  F03A         	call	_Delay_5us	;wreg free
  3414  007CAC  988A               	bcf	3978,4,c	;volatile
  3415                           
  3416                           ;lcd.h: 195: LATBbits.LATB3 = (Chr_CP & 0b00001000)>>3; LATBbits.LATB2 = (Chr_CP & 0b000
      +                          00100)>>2;
  3417  007CAE  C012  F010         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  3418  007CB2  90D8               	bcf	status,0,c
  3419  007CB4  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3420  007CB6  90D8               	bcf	status,0,c
  3421  007CB8  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3422  007CBA  90D8               	bcf	status,0,c
  3423  007CBC  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3424  007CBE  0E01               	movlw	1
  3425  007CC0  1610               	andwf	??_Lcd_Chr_CP,f,c
  3426  007CC2  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3427  007CC4  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3428  007CC6  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3429  007CC8  508A               	movf	3978,w,c	;volatile
  3430  007CCA  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3431  007CCC  0BF7               	andlw	-9
  3432  007CCE  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3433  007CD0  6E8A               	movwf	3978,c	;volatile
  3434  007CD2  C012  F010         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  3435  007CD6  90D8               	bcf	status,0,c
  3436  007CD8  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3437  007CDA  90D8               	bcf	status,0,c
  3438  007CDC  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3439  007CDE  0E01               	movlw	1
  3440  007CE0  1610               	andwf	??_Lcd_Chr_CP,f,c
  3441  007CE2  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3442  007CE4  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3443  007CE6  508A               	movf	3978,w,c	;volatile
  3444  007CE8  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3445  007CEA  0BFB               	andlw	-5
  3446  007CEC  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3447  007CEE  6E8A               	movwf	3978,c	;volatile
  3448                           
  3449                           ;lcd.h: 196: LATBbits.LATB1 = (Chr_CP & 0b00000010)>>1; LATBbits.LATB0 = (Chr_CP & 0b000
      +                          00001);
  3450  007CF0  C012  F010         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  3451  007CF4  90D8               	bcf	status,0,c
  3452  007CF6  3210               	rrcf	??_Lcd_Chr_CP,f,c
  3453  007CF8  0E01               	movlw	1
  3454  007CFA  1610               	andwf	??_Lcd_Chr_CP,f,c
  3455  007CFC  4610               	rlncf	??_Lcd_Chr_CP,f,c
  3456  007CFE  508A               	movf	3978,w,c	;volatile
  3457  007D00  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3458  007D02  0BFD               	andlw	-3
  3459  007D04  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3460  007D06  6E8A               	movwf	3978,c	;volatile
  3461  007D08  C012  F010         	movff	Lcd_Chr_CP@Chr_CP,??_Lcd_Chr_CP
  3462  007D0C  0E01               	movlw	1
  3463  007D0E  1610               	andwf	??_Lcd_Chr_CP,f,c
  3464  007D10  508A               	movf	3978,w,c	;volatile
  3465  007D12  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3466  007D14  0BFE               	andlw	-2
  3467  007D16  1810               	xorwf	??_Lcd_Chr_CP,w,c
  3468  007D18  6E8A               	movwf	3978,c	;volatile
  3469                           
  3470                           ;lcd.h: 197: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  3471  007D1A  F000               	nop	
  3472  007D1C  F000               	nop	
  3473  007D1E  F000               	nop	
  3474  007D20  F000               	nop	
  3475  007D22  F000               	nop	
  3476  007D24  F000               	nop	
  3477  007D26  F000               	nop	
  3478  007D28  F000               	nop	
  3479  007D2A  F000               	nop	
  3480  007D2C  F000               	nop	
  3481                           
  3482                           ;lcd.h: 198: LATBbits.LATB4 = 1; Delay_5us(); LATBbits.LATB4 = 0;
  3483  007D2E  888A               	bsf	3978,4,c	;volatile
  3484  007D30  EC70  F03A         	call	_Delay_5us	;wreg free
  3485  007D34  988A               	bcf	3978,4,c	;volatile
  3486                           
  3487                           ;lcd.h: 199: Delay_5us(); Delay_5500us();
  3488  007D36  EC70  F03A         	call	_Delay_5us	;wreg free
  3489  007D3A  EC68  F039         	call	_Delay_5500us	;wreg free
  3490  007D3E  0012               	return	
  3491  007D40                     __end_of_Lcd_Chr_CP:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           postinc0	equ	0xFEE
  3500                           wreg	equ	0xFE8
  3501                           postdec1	equ	0xFE5
  3502                           fsr1l	equ	0xFE1
  3503                           indf2	equ	0xFDF
  3504                           postinc2	equ	0xFDE
  3505                           postdec2	equ	0xFDD
  3506                           fsr2h	equ	0xFDA
  3507                           fsr2l	equ	0xFD9
  3508                           status	equ	0xFD8
  3509                           
  3510 ;; *************** function _Delay_5us *****************
  3511 ;; Defined at:
  3512 ;;		line 91 in file "lcd.h"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;		None               void
  3519 ;; Registers used:
  3520 ;;		None
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3526 ;;      Params:         0       0       0       0       0       0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3529 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3530 ;;Total ram usage:        0 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    1
  3533 ;; This function calls:
  3534 ;;		Nothing
  3535 ;; This function is called by:
  3536 ;;		_lcd_ini
  3537 ;;		_Lcd_Chr_CP
  3538 ;;		_Lcd_Cmd
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text19
  3543  0074E0                     __ptext19:
  3544                           	opt stack 0
  3545  0074E0                     _Delay_5us:
  3546                           	opt stack 27
  3547                           
  3548                           ;lcd.h: 96: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop();
  3549                           
  3550                           ;incstack = 0
  3551  0074E0  F000               	nop	
  3552  0074E2  F000               	nop	
  3553  0074E4  F000               	nop	
  3554  0074E6  F000               	nop	
  3555  0074E8  F000               	nop	
  3556  0074EA  F000               	nop	
  3557  0074EC  F000               	nop	
  3558  0074EE  F000               	nop	
  3559  0074F0  F000               	nop	
  3560  0074F2  F000               	nop	
  3561                           
  3562                           ;lcd.h: 97: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop();
  3563  0074F4  F000               	nop	
  3564  0074F6  F000               	nop	
  3565  0074F8  F000               	nop	
  3566  0074FA  F000               	nop	
  3567  0074FC  F000               	nop	
  3568  0074FE  F000               	nop	
  3569  007500  F000               	nop	
  3570  007502  F000               	nop	
  3571  007504  F000               	nop	
  3572  007506  F000               	nop	
  3573                           
  3574                           ;lcd.h: 98: __nop(); __nop(); __nop(); __nop(); __nop();
  3575  007508  F000               	nop	
  3576  00750A  F000               	nop	
  3577  00750C  F000               	nop	
  3578  00750E  F000               	nop	
  3579  007510  F000               	nop	
  3580                           
  3581                           ;lcd.h: 99: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __no
      +                          p(); __nop();
  3582  007512  F000               	nop	
  3583  007514  F000               	nop	
  3584  007516  F000               	nop	
  3585  007518  F000               	nop	
  3586  00751A  F000               	nop	
  3587  00751C  F000               	nop	
  3588  00751E  F000               	nop	
  3589  007520  F000               	nop	
  3590  007522  F000               	nop	
  3591  007524  F000               	nop	
  3592                           
  3593                           ;lcd.h: 100: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __n
      +                          op(); __nop();
  3594  007526  F000               	nop	
  3595  007528  F000               	nop	
  3596  00752A  F000               	nop	
  3597  00752C  F000               	nop	
  3598  00752E  F000               	nop	
  3599  007530  F000               	nop	
  3600  007532  F000               	nop	
  3601  007534  F000               	nop	
  3602  007536  F000               	nop	
  3603  007538  F000               	nop	
  3604                           
  3605                           ;lcd.h: 101: __nop(); __nop(); __nop(); __nop(); __nop();
  3606  00753A  F000               	nop	
  3607  00753C  F000               	nop	
  3608  00753E  F000               	nop	
  3609  007540  F000               	nop	
  3610  007542  F000               	nop	
  3611  007544  0012               	return	
  3612  007546                     __end_of_Delay_5us:
  3613                           	opt stack 0
  3614                           tblptru	equ	0xFF8
  3615                           tblptrh	equ	0xFF7
  3616                           tblptrl	equ	0xFF6
  3617                           tablat	equ	0xFF5
  3618                           prodh	equ	0xFF4
  3619                           prodl	equ	0xFF3
  3620                           postinc0	equ	0xFEE
  3621                           wreg	equ	0xFE8
  3622                           postdec1	equ	0xFE5
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           postinc2	equ	0xFDE
  3626                           postdec2	equ	0xFDD
  3627                           fsr2h	equ	0xFDA
  3628                           fsr2l	equ	0xFD9
  3629                           status	equ	0xFD8
  3630                           
  3631 ;; *************** function _Delay_5500us *****************
  3632 ;; Defined at:
  3633 ;;		line 104 in file "lcd.h"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;		None               void
  3640 ;; Registers used:
  3641 ;;		wreg, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    2
  3654 ;; This function calls:
  3655 ;;		_Delay1KTCYx
  3656 ;; This function is called by:
  3657 ;;		_lcd_ini
  3658 ;;		_Lcd_Chr_CP
  3659 ;;		_Lcd_Cmd
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text20
  3664  0072D0                     __ptext20:
  3665                           	opt stack 0
  3666  0072D0                     _Delay_5500us:
  3667                           	opt stack 26
  3668                           
  3669                           ;lcd.h: 108: Delay1KTCYx(28);
  3670                           
  3671                           ;incstack = 0
  3672  0072D0  0E1C               	movlw	28
  3673  0072D2  EC72  F039         	call	_Delay1KTCYx
  3674  0072D6  0012               	return	
  3675  0072D8                     __end_of_Delay_5500us:
  3676                           	opt stack 0
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           postinc0	equ	0xFEE
  3684                           wreg	equ	0xFE8
  3685                           postdec1	equ	0xFE5
  3686                           fsr1l	equ	0xFE1
  3687                           indf2	equ	0xFDF
  3688                           postinc2	equ	0xFDE
  3689                           postdec2	equ	0xFDD
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _Delay1KTCYx *****************
  3695 ;; Defined at:
  3696 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.31\sources\pic18\d1ktcyx.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  unit            1    wreg     unsigned char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  unit            1   14[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;		None               void
  3703 ;; Registers used:
  3704 ;;		wreg
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0
  3711 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3713 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3714 ;;Total ram usage:        1 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_tempo_ms
  3721 ;;		_Delay_5500us
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text21
  3726  0072E4                     __ptext21:
  3727                           	opt stack 0
  3728  0072E4                     _Delay1KTCYx:
  3729                           	opt stack 28
  3730                           
  3731                           ;incstack = 0
  3732                           ;Delay1KTCYx@unit stored from wreg
  3733  0072E4  CFE8 F00F          	movff	wreg,Delay1KTCYx@unit
  3734  0072E8                     l817:
  3735  0072E8  0EFA               	movlw	250
  3736  0072EA                     u977:
  3737  0072EA  F000               	nop	
  3738  0072EC  2EE8               	decfsz	wreg,f,c
  3739  0072EE  D7FD               	goto	u977
  3740  0072F0  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  3741  0072F2  D7FA               	goto	l817
  3742  0072F4  0012               	return	
  3743  0072F6                     __end_of_Delay1KTCYx:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           postinc0	equ	0xFEE
  3752                           wreg	equ	0xFE8
  3753                           postdec1	equ	0xFE5
  3754                           fsr1l	equ	0xFE1
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _interrupcao *****************
  3763 ;; Defined at:
  3764 ;;		line 9 in file "ExemploLCD.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;		None               void
  3771 ;; Registers used:
  3772 ;;		None
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3780 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3781 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:       14 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		Interrupt level 2
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	intcode
  3792  001008                     __pintcode:
  3793                           	opt stack 0
  3794  001008                     _interrupcao:
  3795                           	opt stack 26
  3796                           
  3797                           ;incstack = 0
  3798  001008  CFFA F001          	movff	pclath,??_interrupcao
  3799  00100C  CFFB F002          	movff	pclatu,??_interrupcao+1
  3800  001010  CFE9 F003          	movff	fsr0l,??_interrupcao+2
  3801  001014  EDA3  F03A         	call	int_func,f	;refresh shadow registers
  3802                           pclatu	equ	0xFFB
  3803                           pclath	equ	0xFFA
  3804                           tblptru	equ	0xFF8
  3805                           tblptrh	equ	0xFF7
  3806                           tblptrl	equ	0xFF6
  3807                           tablat	equ	0xFF5
  3808                           prodh	equ	0xFF4
  3809                           prodl	equ	0xFF3
  3810                           postinc0	equ	0xFEE
  3811                           fsr0l	equ	0xFE9
  3812                           wreg	equ	0xFE8
  3813                           postdec1	equ	0xFE5
  3814                           fsr1l	equ	0xFE1
  3815                           indf2	equ	0xFDF
  3816                           postinc2	equ	0xFDE
  3817                           postdec2	equ	0xFDD
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8
  3821                           
  3822                           	psect	intcode_body
  3823  007546                     __pintcode_body:
  3824                           	opt stack 26
  3825  007546                     int_func:
  3826                           	opt stack 26
  3827  007546  0006               	pop		; remove dummy address from shadow register refresh
  3828  007548  CFEA F004          	movff	fsr0h,??_interrupcao+3
  3829  00754C  CFE1 F005          	movff	fsr1l,??_interrupcao+4
  3830  007550  CFE2 F006          	movff	fsr1h,??_interrupcao+5
  3831  007554  CFD9 F007          	movff	fsr2l,??_interrupcao+6
  3832  007558  CFDA F008          	movff	fsr2h,??_interrupcao+7
  3833  00755C  CFF3 F009          	movff	prodl,??_interrupcao+8
  3834  007560  CFF4 F00A          	movff	prodh,??_interrupcao+9
  3835  007564  CFF6 F00B          	movff	tblptrl,??_interrupcao+10
  3836  007568  CFF7 F00C          	movff	tblptrh,??_interrupcao+11
  3837  00756C  CFF8 F00D          	movff	tblptru,??_interrupcao+12
  3838  007570  CFF5 F00E          	movff	tablat,??_interrupcao+13
  3839  007574  C00E  FFF5         	movff	??_interrupcao+13,tablat
  3840  007578  C00D  FFF8         	movff	??_interrupcao+12,tblptru
  3841  00757C  C00C  FFF7         	movff	??_interrupcao+11,tblptrh
  3842  007580  C00B  FFF6         	movff	??_interrupcao+10,tblptrl
  3843  007584  C00A  FFF4         	movff	??_interrupcao+9,prodh
  3844  007588  C009  FFF3         	movff	??_interrupcao+8,prodl
  3845  00758C  C008  FFDA         	movff	??_interrupcao+7,fsr2h
  3846  007590  C007  FFD9         	movff	??_interrupcao+6,fsr2l
  3847  007594  C006  FFE2         	movff	??_interrupcao+5,fsr1h
  3848  007598  C005  FFE1         	movff	??_interrupcao+4,fsr1l
  3849  00759C  C004  FFEA         	movff	??_interrupcao+3,fsr0h
  3850  0075A0  C003  FFE9         	movff	??_interrupcao+2,fsr0l
  3851  0075A4  C002  FFFB         	movff	??_interrupcao+1,pclatu
  3852  0075A8  C001  FFFA         	movff	??_interrupcao,pclath
  3853  0075AC  0011               	retfie		f
  3854  0075AE                     __end_of_interrupcao:
  3855                           	opt stack 0
  3856                           pclatu	equ	0xFFB
  3857                           pclath	equ	0xFFA
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           postinc0	equ	0xFEE
  3865                           fsr0h	equ	0xFEA
  3866                           fsr0l	equ	0xFE9
  3867                           wreg	equ	0xFE8
  3868                           postdec1	equ	0xFE5
  3869                           fsr1h	equ	0xFE2
  3870                           fsr1l	equ	0xFE1
  3871                           indf2	equ	0xFDF
  3872                           postinc2	equ	0xFDE
  3873                           postdec2	equ	0xFDD
  3874                           fsr2h	equ	0xFDA
  3875                           fsr2l	equ	0xFD9
  3876                           status	equ	0xFD8
  3877                           pclatu	equ	0xFFB
  3878                           pclath	equ	0xFFA
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           prodh	equ	0xFF4
  3884                           prodl	equ	0xFF3
  3885                           postinc0	equ	0xFEE
  3886                           fsr0h	equ	0xFEA
  3887                           fsr0l	equ	0xFE9
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1h	equ	0xFE2
  3891                           fsr1l	equ	0xFE1
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           postdec2	equ	0xFDD
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899                           	psect	rparam
  3900  0000                     pclatu	equ	0xFFB
  3901                           pclath	equ	0xFFA
  3902                           tblptru	equ	0xFF8
  3903                           tblptrh	equ	0xFF7
  3904                           tblptrl	equ	0xFF6
  3905                           tablat	equ	0xFF5
  3906                           prodh	equ	0xFF4
  3907                           prodl	equ	0xFF3
  3908                           postinc0	equ	0xFEE
  3909                           fsr0h	equ	0xFEA
  3910                           fsr0l	equ	0xFE9
  3911                           wreg	equ	0xFE8
  3912                           postdec1	equ	0xFE5
  3913                           fsr1h	equ	0xFE2
  3914                           fsr1l	equ	0xFE1
  3915                           indf2	equ	0xFDF
  3916                           postinc2	equ	0xFDE
  3917                           postdec2	equ	0xFDD
  3918                           fsr2h	equ	0xFDA
  3919                           fsr2l	equ	0xFD9
  3920                           status	equ	0xFD8


Data Sizes:
    Strings     27
    Constant    10
    Data        12
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      91
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_3(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1749$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    CGRAM_SanUSB@ptr	PTR unsigned char  size(2) Largest target is 8
		 -> sino(COMRAM[8]), 

    lcd_escreve2@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> buffer1(COMRAM[20]), 

    lcd_escreve@buffer	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[9]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _le_AD10bits->_tempo_ms
    _tempo_ms->_Delay1KTCYx
    _lcd_ini->___awdiv
    _lcd_escreve2->_Lcd_Chr_CP
    _lcd_escreve2->_Lcd_Cmd
    _lcd_escreve->_Lcd_Chr_CP
    _lcd_escreve->_Lcd_Cmd
    _clock_int_4MHz->___lwdiv
    ___lwdiv->___awmod
    _Lcd_Chr->_Lcd_Chr_CP
    _Lcd_Chr->_Lcd_Cmd
    _CGRAM_SanUSB->_Lcd_Chr_CP
    _CGRAM_SanUSB->_Lcd_Cmd
    _Delay_5500us->_Delay1KTCYx

Critical Paths under _interrupcao in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupcao in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupcao in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupcao in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupcao in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6989
                                             53 COMRAM     2     2      0
                       _CGRAM_SanUSB
                            _Lcd_Chr
                            _Lcd_Cmd
                     _clock_int_4MHz
                  _habilita_canal_AD
                      _inverte_saida
                        _lcd_escreve
                       _lcd_escreve2
                            _lcd_ini
                        _le_AD10bits
                            _sprintf
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    12      6    1903
                                             35 COMRAM    18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     741
                                             29 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _le_AD10bits                                          3     1      2     484
                                             19 COMRAM     3     1      2
                           _tempo_ms
 ---------------------------------------------------------------------------------
 (1) _tempo_ms                                             4     2      2     469
                                             15 COMRAM     4     2      2
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (1) _lcd_ini                                              2     2      0     753
                                             23 COMRAM     2     2      0
                       _Delay_5500us
                          _Delay_5us
                            _Lcd_Cmd
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     513
                                             14 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _lcd_escreve2                                         5     2      3     496
                                             18 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_escreve                                          5     2      3     602
                                             18 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _inverte_saida                                        4     2      2     121
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _habilita_canal_AD                                    1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _clock_int_4MHz                                       0     0      0    1057
                            ___awmod
                            ___lwdiv
                          _le_eeprom
 ---------------------------------------------------------------------------------
 (2) _le_eeprom                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     741
                                             21 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     301
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Chr                                              4     2      2     481
                                             18 COMRAM     4     2      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _CGRAM_SanUSB                                         8     6      2     473
                                             18 COMRAM     8     6      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                             15 COMRAM     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     135
                                             15 COMRAM     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (3) _Delay_5us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Delay_5500us                                         0     0      0      15
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interrupcao                                         14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CGRAM_SanUSB
     _Lcd_Chr_CP
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
   _Lcd_Chr
     _Lcd_Chr_CP
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
   _Lcd_Cmd
     _Delay_5500us
       _Delay1KTCYx
     _Delay_5us
   _clock_int_4MHz
     ___awmod
     ___lwdiv
       ___awmod (ARG)
     _le_eeprom
   _habilita_canal_AD
   _inverte_saida
   _lcd_escreve
     _Lcd_Chr_CP
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
   _lcd_escreve2
     _Lcd_Chr_CP
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
   _lcd_ini
     _Delay_5500us
       _Delay1KTCYx
     _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
         _Delay1KTCYx
       _Delay_5us
     ___awdiv
   _le_AD10bits
     _tempo_ms
       _Delay1KTCYx
   _sprintf
     ___lwdiv
       ___awmod (ARG)
     ___lwmod
       ___lwdiv (ARG)
         ___awmod (ARG)
   _tempo_ms
     _Delay1KTCYx

 _interrupcao (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     37      5B       1       95.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B      20        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Fri May 22 10:16:21 2015

                         _R 0050                           _i 0038                           _k 003A  
                         _s 003B            ??_clock_int_4MHz 001E                          u10 7362  
                        u16 7364                          u45 731E                          u55 7AFC  
                        u47 7320                          u65 7B18                          u75 7B3A  
                        u85 7C24                          u95 7C40                ___awdiv@sign 0015  
               lcd_ini@data 0019                         l321 7372                         l260 7D42  
                       l270 7D78                         l262 7D48                         l431 76A6  
                       l271 7D7E                         l263 7D4E                         l280 7DB4  
                       l272 7D84                         l264 7D54                         l512 7A52  
                       l281 7DBA                         l273 7D8A                         l265 7D5A  
                       l282 7DC0                         l274 7D90                         l266 7D60  
     __end_of_inverte_saida 7E9A                         l283 7DC6                         l275 7D96  
                       l267 7D66                         l363 781A                         l428 7698  
                       l284 7DCC                         l276 7D9C                         l268 7D6C  
                       l285 7DD2                         l277 7DA2                         l269 7D72  
                       l509 7A02                         l286 7DD8                         l278 7DA8  
                       l287 7DDE                         l279 7DAE                         l288 7E98  
                       l563 7682                         l817 72E8                         u105 7C62  
                       u305 7818                         u307 781A                         _PR2 000FCB  
                       _REG 0052                         u435 762E                         u295 780E  
                       u297 7810                         u977 72EA                ___awmod@sign 0015  
                       wreg 000FE8                        EEADR 000FA9                        l1119 7472  
                      l2031 75C0                        l2111 7EEC                        l2041 75F0  
                      l2033 75C6                        l1129 73D4                        l2121 7F24  
                      l2105 7EBE                        l2027 75B4                        l2051 7488  
                      l2045 7604                        l2029 75BA                        l2037 75CE  
                      l2053 748E                        l2061 74B6                        l2141 7F7C  
                      l2071 73E4                        l2039 75E8                        l2063 74BE  
                      l2055 7494                        l2143 7F82                        l2135 7F60  
                      l2151 7FDC                        l2073 73EA                        l2081 73FE  
                      l2049 7482                        l2153 7FF2                        l2091 7662  
                      l2075 73F0                        l2083 7418                        l2067 74D0  
                      l2059 749C                        l2077 73F6                        l2149 7FD4  
                      l2095 767A                        l1801 771C                        l1811 7752  
                      l2099 7EA4                        l1813 7756                        l1821 7774  
                      l1805 7738                        l1903 77BC                        l1825 7782  
                      l1817 776A                        l1809 774A                        l1905 77FA  
                      l2465 7978                        l1835 7440                        l1771 7896  
                      l1763 7874                        l1595 7380                        l1837 7448  
                      l1781 78B6                        l1773 789A                        l1757 7854  
                      l1847 7468                        l1839 744C                        l1871 7DE4  
                      l1599 738A                        l1863 73CA                        l1855 73AA  
                      l1769 788E                        l1785 78C0                        l1881 7792  
                      l1857 73B2                        l1891 77A6                        l1883 7796  
                      l1859 73B6                        l1789 78CE                        l1893 77AA  
                      l1885 779A                        l1895 77AE                        l1887 779E  
                      l1897 77B2                        l1889 77A2                        l1899 77B6  
                      STR_1 1027                        STR_2 1034                        STR_3 103D  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
              lcd_escreve@x 0013                lcd_escreve@y 0016        __size_of_le_AD10bits 009C  
            ??_lcd_escreve2 0016                        _main 78D8                        _sino 0054  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr0l 000FE9  
                      fsr2h 000FDA                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9                        pclat 000FFA                        prodh 000FF4  
                      prodl 000FF3                        start 1018             __end_of_Lcd_Cmd 7C14  
           __end_of_Lcd_Chr 7426                  _Lcd_Chr_CP 7C14                       EECON1 000FA6  
         inverte_saida@pino 000F                 _Delay1KTCYx 72E4                       ?_main 0001  
           __end_of___awdiv 78D8                       _ADRES 000FC3                       _EEADR 000FA9  
           __end_of___awmod 778C                       _T0CON 000FD5             ___awdiv@divisor 0011  
                     _T1CON 000FCD                       _T2CON 000FCA                       _T3CON 000FB1  
           __end_of___lwdiv 747C             __end_of___lwmod 73DE             ___awdiv@counter 0014  
                     _RCSTA 000FAB                       _REGad 0053                       _TMR0H 000FD7  
                     _TMR1H 000FCF                       _TMR0L 000FD6                       _TMR3H 000FB3  
                     _TMR1L 000FCE                       _TMR3L 000FB2                       _SPBRG 000FAF  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TXREG 000FAD                       _TXSTA 000FAC             __end_of_lcd_ini 7AEC  
             lcd_escreve2@x 0013               lcd_escreve2@y 0016             __end_of_dpowers 1027  
                     tablat 000FF5                       status 000FD8             __end_of_sprintf 8000  
           __initialization 7324                ?_interrupcao 0001       __size_of_Delay_5500us 0008  
              __end_of_main 79DE          __size_of_Delay_5us 0066                      BLEIBEN 768E  
                    ??_main 0036               __activetblptr 000002                      _ADCON0 000FC2  
                    _ADCON1 000FC1                      _ADCON2 000FC0                      _ADRESH 000FC4  
                    _EEDATA 000FA8                      _CCPR1L 000FBE                      _CCPR2L 000FBB  
                    _EECON1 000FA6                      _EECON2 000FA7            ___awdiv@dividend 000F  
     __size_of_CGRAM_SanUSB 006C                      _OSCCON 000FD3                   ??_Lcd_Cmd 0010  
                 ??_Lcd_Chr 0015                _Delay_5500us 72D0                      _SPBRGH 000FB0  
             CGRAM_SanUSB@i 0019               CGRAM_SanUSB@j 001A        __size_of_lcd_escreve 006A  
               ?_Lcd_Chr_CP 0001                   ??___awdiv 0013                   ??___awmod 0013  
                 ??___lwdiv 001A                   ??___lwmod 0022                      clear_0 732A  
          ___awdiv@quotient 0016             ___awmod@divisor 0011             ___awmod@counter 0014  
                 ??_lcd_ini 0018        __end_of_lcd_escreve2 74E0                __pdataCOMRAM 0050  
        lcd_escreve2@buffer 0014            __end_of_tempo_ms 7398                _CGRAM_SanUSB 7618  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ??_sprintf 002A           __end_of_Delay_5us 7546  
                __accesstop 0060     __end_of__initialization 7350              __pcstackCOMRAM 0001  
         _habilita_canal_AD 72F6          ?_habilita_canal_AD 0001          __size_of_le_eeprom 001C  
       __size_of_Lcd_Chr_CP 012C            Lcd_Chr_CP@Chr_CP 0012         ??_habilita_canal_AD 000F  
      __size_of_interrupcao 65A6                     _CCP1CON 000FBD                     _CCP2CON 000FBA  
              ?_Delay1KTCYx 0001                     _BAUDCON 000FB8   __end_of_habilita_canal_AD 7308  
             ??_le_AD10bits 0016                     _Lcd_Cmd 7AEC                     _Lcd_Chr 73DE  
    __size_of_inverte_saida 015A                     __Hparam 0000                     __Lparam 0000  
                 ?_tempo_ms 0010           __end_of_le_eeprom 7324                     ___awdiv 7828  
                   ___awmod 76F0        CGRAM_SanUSB@location 0018       __size_of_lcd_escreve2 0064  
                   ___lwdiv 7426                     ___lwmod 7398                __psmallconst 101C  
           lcd_escreve@data 0017                     __pcinit 7324                     __ramtop 0800  
                   __ptext0 78D8                     __ptext1 7E9A                     __ptext2 7398  
                   __ptext3 778C                     __ptext4 735A                     __ptext5 79DE  
                   __ptext6 7828                     __ptext7 747C                     __ptext8 75AE  
                   __ptext9 7D40                     _buffer1 003C                     _lcd_ini 79DE  
                 _T0CONbits 000FD5                   _T1CONbits 000FCD                     _dpowers 101D  
                 _T2CONbits 000FCA                   _T3CONbits 000FB1            ___awmod@dividend 000F  
   __size_of_clock_int_4MHz 006C                     _sprintf 7E9A              __pintcode_body 7546  
      end_of_initialization 7350               __Lmediumconst 0000                     int_func 7546  
              _lcd_escreve2 747C         __end_of_le_AD10bits 7828                  ??_tempo_ms 0012  
              ??_Lcd_Chr_CP 0010                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc2 000FDE  __size_of_habilita_canal_AD 0012  
                 _PORTAbits 000F80                   _PORTBbits 000F81                   _PORTCbits 000F82  
                 _PORTDbits 000F83               _inverte_saida 7D40                   _TRISAbits 000F92  
                 _TRISBbits 000F93                   _TRISCbits 000F94                   _TRISDbits 000F95  
        __end_of_Lcd_Chr_CP 7D40                   _TXSTAbits 000FAC             le_AD10bits@conv 0016  
                 _Delay_5us 74E0               ??_lcd_escreve 0016                 _BAUDCONbits 000FB8  
             __pidataCOMRAM 72D8              ?_inverte_saida 000F        __size_of_Delay1KTCYx 0012  
       start_initialization 7324                 _le_AD10bits 778C                  ?_Delay_5us 0001  
       __end_of_lcd_escreve 7618                 __pbssCOMRAM 0038              _clock_int_4MHz 7684  
       __end_of__stringdata 1042             Delay1KTCYx@unit 000F           lcd_escreve@buffer 0014  
                  ?_Lcd_Cmd 0001                    ?_Lcd_Chr 0013                 sprintf@_val 0030  
               sprintf@flag 002E                 sprintf@prec 002F            ___lwdiv@dividend 0016  
             ??_interrupcao 0001                   __pintcode 1008                    ?___awdiv 000F  
                  ?___awmod 000F                    ?___lwdiv 0016                    ?___lwmod 001E  
         __size_of_tempo_ms 003E             ??_inverte_saida 0011                   _le_eeprom 7308  
                  ?_lcd_ini 0001                 __smallconst 101C      __end_of_clock_int_4MHz 76F0  
          ___lwdiv@quotient 001B                    ?_sprintf 0024               ?_Delay_5500us 0001  
                  _LATBbits 000F8A                    _IPR1bits 000F9F                    _PIE1bits 000F9D  
                  _PIE2bits 000FA0                 ??_Delay_5us 000F                 _lcd_escreve 75AE  
                  Lcd_Chr@x 0013                    Lcd_Chr@y 0015                    _RCONbits 000FD0  
                ?_le_eeprom 0001         __end_of_interrupcao 75AE                  _ADCON0bits 000FC2  
               __stringdata 1027                  _ADCON2bits 000FC0             ?_clock_int_4MHz 0001  
             ?_CGRAM_SanUSB 0013             CGRAM_SanUSB@ptr 0013                 _INTCON2bits 000FF1  
               _INTCON3bits 000FF0                   copy_data0 7344              ??_Delay_5500us 0010  
          __size_of_Lcd_Cmd 0128            __size_of_Lcd_Chr 0048                  _EECON1bits 000FA6  
                  __Hrparam 0000                    __Lrparam 0000      habilita_canal_AD@canal 000F  
          lcd_escreve2@data 0017            __size_of___awdiv 00B0            __size_of___awmod 009C  
          __size_of___lwdiv 0056            __size_of___lwmod 0046              ??_CGRAM_SanUSB 0015  
          __size_of_lcd_ini 010E             ___lwdiv@divisor 0018             ___lwdiv@counter 001D  
                  __ptext10 72F6                    __ptext11 7684                    __ptext20 72D0  
                  __ptext12 7308                    __ptext21 72E4                    __ptext13 7426  
                  __ptext14 76F0                    __ptext15 73DE                    __ptext16 7618  
                  __ptext17 7AEC                    __ptext18 7C14                    __ptext19 74E0  
              ?_le_AD10bits 0014            __size_of_sprintf 0166                 Lcd_Chr@data 0016  
             __size_of_main 0106                 _interrupcao 1008                   tempo_ms@i 0010  
                  _tempo_ms 735A                   tempo_ms@k 0012           le_eeprom@endereco 000F  
             ??_Delay1KTCYx 000F                 ??_le_eeprom 000F                  _INTCONbits 000FF2  
                  intlevel2 0000                   sprintf@ap 002C                   sprintf@sp 0024  
          ___lwmod@dividend 001E                  Lcd_Cmd@Cmd 0012                  Lcd_Chr@Chr 0014  
                _OSCCONbits 000FD3        __end_of_Delay_5500us 72D8                    sprintf@c 0035  
                  sprintf@f 0026             ___lwmod@divisor 0020         __end_of_Delay1KTCYx 72F6  
           ___lwmod@counter 0023                  _WDTCONbits 000FD1               ?_lcd_escreve2 0013  
      __end_of_CGRAM_SanUSB 7684                ?_lcd_escreve 0013  
